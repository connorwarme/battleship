(()=>{"use strict";var n,e,t,i,r,a,o,A,s,l,d,c,p,C,u,B={426:(n,e,t)=>{t.d(e,{Z:()=>m});var i=t(537),r=t.n(i),a=t(645),o=t.n(a),A=t(667),s=t.n(A),l=new URL(t(154),t.b),d=new URL(t(126),t.b),c=new URL(t(873),t.b),p=o()(r()),C=s()(l),u=s()(d),B=s()(c);p.push([n.id,"@font-face {\n    font-family: 'Russo';\n    src: url("+C+") format('truetype');\n    font-weight: 400;\n    font-style: normal;\n}\n@font-face {\n    font-family: 'Gar';\n    src: url("+u+") format('truetype');\n    font-style: normal;\n}\n@font-face {\n    font-family: 'GarItalic';\n    src: url("+B+") format('truetype');\n    font-style: normal;\n}\n* {\n    padding: 0;\n    margin: 0;\n    font-family: 'Gar', Georgia, 'Times New Roman', Times, serif;\n}\n.body {\n    background-color: #90e0ef;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    min-width: 100vw;\n}\n.headerContainer {\n    display: grid;\n    grid-template-columns: repeat(16, 1fr);\n    justify-items: center;\n    align-items: center;\n}\n.headerTitle {\n    grid-column: 2/16;\n    font-family: 'Russo', Times, Georgia;\n    font-size: 70px;\n    font-weight: 700;\n    padding: 15px 0 0 0;\n}\n.menuBtnContainer {\n    display: none;\n    grid-column: 16/17;\n}\n.menuBtn:hover {\n    cursor: pointer;\n}\n.commContainer {\n    display: grid;\n    justify-items: center;\n}\n.comms {\n    min-width: 850px;\n    padding: 1vh 3vw;\n    font-size: 32px;\n    font-weight: 600;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    color:#90e0ef;\n    border-radius: 15px;\n    border: 4px solid #90e0ef;\n    outline: 4px solid black;\n    margin-bottom: 15px;\n}\n.placeContainer {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    margin-bottom: 15px;\n}\n.placeBtnContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n}\n.placeBtnContainer > button {\n    font-family: 'Russo', Georgia, 'Times New Roman', Times, serif;\n    font-size: 20px;\n    font-weight: 500;\n    height: 44px;\n    width: 125px;\n    text-align: center;\n    background-color: white;\n    border: none;\n    border-radius: 10px;\n    box-shadow: inset 0 0 5px rgb(45, 100, 170);\n    transition-duration: 250ms;\n    transition-timing-function: ease-in-out;\n}\n.placeBtnContainer > button:hover {\n    cursor: pointer;\n    box-shadow: inset 0 0 1px #0077B6;\n}\n.placeBtnContainer > button:active {\n    transform: scale(0.98);\n    box-shadow: 2px 2px 5px black;\n}\n.placeInstructions {\n    padding: 2vh 2vw;\n    text-align: center;\n}\n.instructTitle {\n    font-size: 24px;\n}\n.main {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    background-color:#90e0ef;\n}\n.mainContainer {\n    display: grid;\n    grid-template-columns: 3fr 2fr 3fr;\n    padding: 0 0 20px 0;\n}\n.initialContent {\n    grid-column: 2/3;\n    display: grid;\n    grid-template-rows: 1fr 1fr 1fr;\n    justify-items: center;\n    gap: 20px;\n    padding: 20px 50px 40px 50px;\n    border: 16px double black;\n    border-radius: 25px;\n}\n.instructionsContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 300px;\n}\n.instructions {\n    font-size: 28px;\n    font-style: italic;\n}\n.inputContainer {\n    display: grid;\n    place-items: center;\n}\n.inputContainer > label {\n    font-size: 20px;\n}\n.inputField {\n    padding: 10px;\n    border: 2px solid black;\n    border-radius: 10px;\n    margin: 10px;\n    font-size: 18px;\n    text-align: center;\n}\n.inputField:focus {\n    outline: none;\n}\n.inputField:focus::placeholder {\n    color: transparent;\n}\n.startContainer {\n    display: flex;\n    align-items: center;\n}\n.start {\n    padding: 10px 20px;\n    background-color: white;\n    border: 4px solid black;\n    border-radius: 10px;\n    font-family: 'Russo', Georgia, 'Times New Roman', Times, serif;\n    font-size: 24px;\n    font-weight: 500;\n    transition-duration: 300ms;\n    transition-timing-function: ease-in-out;\n    box-shadow: inset 0 0 5px #90e0ef;\n}\n.start:hover {\n    cursor: pointer;\n    box-shadow: 0 0 5px #0077B6;\n}\n.start:active {\n    transform: scale(0.98);\n    box-shadow: 2px 2px 5px black;\n}\n.displayBoard {\n    grid-area: 1/2/4/3;\n    max-height: 418px;\n    max-width: 418px;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    gap: 2px;\n    margin: 0 auto;\n    padding: 10px;\n    border: 5px solid  white;\n    border-radius: 10px;\n    box-shadow: inset 0 0 40px rgb(35, 100, 170);\n}\n.mainContainer .boardContainer:nth-child(2) {\n    grid-column: 3/4;\n}\n.legendContainer {\n    display: grid;\n    grid-template-rows: 1fr 2fr 4fr;\n    grid-area: 1/2/2/3;\n    padding: 10px;\n    box-shadow: inset 0 0 10px rgb(45, 100, 170);\n}\n.legendBox {\n    grid-row: 3/4;\n}\n.objectiveBox {\n    grid-row: 1/2;\n}\n.instructBox {\n    grid-row: 2/3;\n}\n.legendBox,\n.objectiveBox,\n.instructBox {\n    text-align: center;\n}\n.boardLabel {\n    font-family: 'Russo', Georgia, 'Times New Roman', Times, serif;\n    text-transform: uppercase;\n    text-align: center;\n    font-weight: 700;\n    padding-bottom: 5px;\n    color: rgb(35, 100, 170);\n    text-shadow: 0.2px 0.2px black;\n}\n.col {\n    display: grid;\n    gap: 2px;\n}\n.cell {\n    height: 40px;\n    width: 40px;\n    background-color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 32px;\n    border-radius: 5px;\n}\n.ship {\n    background-color: lightslategray;\n}\n.hit {\n    background-color: rgb(208, 0, 0);\n}\n.miss {\n    background-color: rgb(35, 100, 170);\n}\n.sunk {\n    background-color: rgb(208, 0, 0);\n}\n.legendContainer {\n    background-color: white;\n    border-radius: 15px;\n    margin-top: 10px;\n}\n.legendBox {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n.emojiLi {\n    list-style: none;\n    display: flex;\n    align-items: center;\n    margin: 4px;\n}\n.emojiBox {\n    height: 40px;\n    width: 40px;\n    font-size: 32px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 8px;\n    border-radius: 5px;\n}\n.legendBox,\n.objectiveBox, \n.instructBox {\n    font-style: italic;\n    font-size: 20px;\n    font-weight: 700;\n    color: #0077B6;\n}\n.emojiLi,\n.objectiveText,\n.instructText {\n    font-style: normal;\n    font-size: 16px;\n    color: black;\n    font-weight: 500;\n}\n.instructText {\n    padding: 0 8px;\n}\n.endContainer {\n    display: grid;\n    grid-template-rows: repeat(3, 1fr);\n    padding: 50px;\n    border: 16px double black;\n    border-radius: 25px;\n}\n.banner {\n    text-align: center;\n    font-size: 50px;\n    font-weight: 600;\n}\n.winner {\n    font-size: 38px;\n}\n.playAgain {\n    padding: 10px;\n    border: 4px solid black;\n    border-radius: 10px;\n    font-size: 38px;\n    transition-duration: 500ms;\n    transition-timing-function: ease-in-out;\n    background-color: white;\n    box-shadow: inset 0 0 3px black;\n}\n.playAgain:hover {\n    cursor: pointer;\n    box-shadow: 0 0 3px black;\n}\n.playAgain:active {\n    transform: scale(0.98);\n    box-shadow: 2px 2px 5px black;\n}\n.footerContainer {\n    display: flex;\n    justify-content: center;\n}\n.footerBox {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n}\n.linkContainer {\n    display: flex;\n    justify-content: center;\n}\n.gitIcon,\n.linkIcon {\n    height: 40px;\n}\n.linkContainer > a > img {\n    transition-duration: 500ms;\n    transition-timing-function: ease-in-out;\n}\n.linkContainer > a > img:hover {\n    transform: rotateZ(360deg);\n}\n@media (min-width: 950px) and (max-width: 1350px) {\n    .initialContent {\n        grid-area: 1/3/3/4;\n    }\n    .comms {\n        min-width: 750px;\n    }\n    .mainContainer {\n        grid-template-columns: 1fr 18fr 0.5fr 18fr 1fr;\n        grid-template-rows: 2fr 1fr;\n        align-items: center;\n        width: 100vw;\n    }\n    .mainContainer .boardContainer:first-child {\n        grid-area: 1/2/2/3;\n    }\n    .mainContainer .boardContainer:nth-child(2) {\n        grid-area: 1/4/2/5;\n    }\n    .displayBoard {\n        grid-area: 1/3/3/4;\n    }\n    .legendContainer {\n        grid-area: 2/2/3/-2;\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        height: 220px;\n        width: 750px;\n        justify-self: center;\n    }\n    .legendBox {\n        grid-area: 1/2/4/3;\n    }\n    .instructBox {\n        grid-row: 2/4;\n    }\n    .emojiBox {\n        height: 36px;\n        width: 36px;\n        font-size: 28px;\n    }\n}\n@media (max-width: 950px) {\n    .menuBtn {\n        height: 40px;\n        width: 40px;\n    }\n    .comms {\n        min-width: 0;\n        width: 100%;\n        padding: 1vh 0;\n        font-size: 20px;\n        border-radius: 0;\n        border-right: none;\n        border-left: none;\n        margin-bottom: 5px;\n    }\n    .placeBtnContainer > button {\n        font-size: 18px;\n    }\n    .instructTitle {\n        font-size: 20px;\n    }\n    .placeInstructions .instructText {\n        font-size: 14px;\n    }\n    .mainContainer {\n        grid-template-rows: repeat(2, 1fr);\n        grid-template-columns: 1fr;\n    }\n    .initialContent {\n        grid-area: 1/1/4/2;\n    }\n    .mainContainer .boardContainer:first-child {\n        grid-area: 2/1/3/2;\n        margin-top: 10px;\n    }\n    .mainContainer .boardContainer:nth-child(2) {\n        grid-area: 1/1/2/2;\n        margin-top: 10px;\n    }\n    .legendContainer {\n        display: none;\n        grid-area: 1/1/3/2;\n        width: 450px;\n    }\n}\n@media (max-width: 549px) {\n    .headerTitle {\n        font-size: 36px;\n        padding: 5px 0;\n    }\n    .menuBtn {\n        height: 25px;\n        width: 25px;\n    }\n    .initialContent {\n        padding: 0;\n        gap: 0;\n    }\n    .instructionsContainer {\n        min-width: 260px;\n    }\n    .instructions {\n        font-size: 20px;\n    }\n    .inputContainer > label {\n        font-size: 16px;\n    }\n    .inputField {\n        width: 200px;\n    }\n    .comms {\n        font-size: 16px;\n        text-align: center;\n    }\n    .placeContainer {\n        margin-bottom: 5px;\n    }\n    .placeInstructions {\n        padding: 1vh 2vw;\n    }\n    .instructTitle {\n        font-size: 16px;\n    }\n    .placeInstructions .instructText {\n        font-size: 14px;\n    }\n    .cell {\n        height: 25px;\n        width: 25px;\n        font-size: 20px;\n    }\n    .mainContainer {\n        padding-bottom: 10px;\n    }\n    .legendContainer {\n        width: 90%;\n        justify-self: center;\n        margin-top: 5px;\n    }\n    .objectiveBox,\n    .instructBox,\n    .legendBox {\n        font-size: 16px;\n    }\n    .objectiveText,\n    .instructText,\n    .emojiLi {\n        font-size: 14px;\n    }\n    .emojiBox {\n        height: 25px;\n        width: 25px;\n        font-size: 20px;\n    }\n    .endContainer {\n        padding: 0;\n        place-items: center;\n        min-height: 275px;\n    }\n    .banner {\n        min-width: 260px;\n        font-size: 36px;\n    }\n    .winner {\n        font-size: 28px;\n    }\n    .playAgain {\n        font-size: 24px;\n        font-weight: 700px;\n        padding: 10px 30px;\n    }\n    .gitIcon,\n    .linkIcon {\n        height: 25px;\n        width: 25px;\n    }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,+DAA2D;IAC3D,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,+DAAuE;IACvE,kBAAkB;AACtB;AACA;IACI,wBAAwB;IACxB,+DAA8E;IAC9E,kBAAkB;AACtB;AACA;IACI,UAAU;IACV,SAAS;IACT,4DAA4D;AAChE;AACA;IACI,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,sCAAsC;IACtC,qBAAqB;IACrB,mBAAmB;AACvB;AACA;IACI,iBAAiB;IACjB,oCAAoC;IACpC,eAAe;IACf,gBAAgB;IAChB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,kBAAkB;AACtB;AACA;IACI,eAAe;AACnB;AACA;IACI,aAAa;IACb,qBAAqB;AACzB;AACA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,yBAAyB;IACzB,wBAAwB;IACxB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,mBAAmB;AACvB;AACA;IACI,8DAA8D;IAC9D,eAAe;IACf,gBAAgB;IAChB,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;IACZ,mBAAmB;IACnB,2CAA2C;IAC3C,0BAA0B;IAC1B,uCAAuC;AAC3C;AACA;IACI,eAAe;IACf,iCAAiC;AACrC;AACA;IACI,sBAAsB;IACtB,6BAA6B;AACjC;AACA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,eAAe;AACnB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,wBAAwB;AAC5B;AACA;IACI,aAAa;IACb,kCAAkC;IAClC,mBAAmB;AACvB;AACA;IACI,gBAAgB;IAChB,aAAa;IACb,+BAA+B;IAC/B,qBAAqB;IACrB,SAAS;IACT,4BAA4B;IAC5B,yBAAyB;IACzB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,eAAe;IACf,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,eAAe;AACnB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,kBAAkB;AACtB;AACA;IACI,aAAa;AACjB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,uBAAuB;IACvB,mBAAmB;IACnB,8DAA8D;IAC9D,eAAe;IACf,gBAAgB;IAChB,0BAA0B;IAC1B,uCAAuC;IACvC,iCAAiC;AACrC;AACA;IACI,eAAe;IACf,2BAA2B;AAC/B;AACA;IACI,sBAAsB;IACtB,6BAA6B;AACjC;AACA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;IAChB,aAAa;IACb,sCAAsC;IACtC,QAAQ;IACR,cAAc;IACd,aAAa;IACb,wBAAwB;IACxB,mBAAmB;IACnB,4CAA4C;AAChD;AACA;IACI,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,+BAA+B;IAC/B,kBAAkB;IAClB,aAAa;IACb,4CAA4C;AAChD;AACA;IACI,aAAa;AACjB;AACA;IACI,aAAa;AACjB;AACA;IACI,aAAa;AACjB;AACA;;;IAGI,kBAAkB;AACtB;AACA;IACI,8DAA8D;IAC9D,yBAAyB;IACzB,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;IACnB,wBAAwB;IACxB,8BAA8B;AAClC;AACA;IACI,aAAa;IACb,QAAQ;AACZ;AACA;IACI,YAAY;IACZ,WAAW;IACX,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,kBAAkB;AACtB;AACA;IACI,gCAAgC;AACpC;AACA;IACI,gCAAgC;AACpC;AACA;IACI,mCAAmC;AACvC;AACA;IACI,gCAAgC;AACpC;AACA;IACI,uBAAuB;IACvB,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,WAAW;AACf;AACA;IACI,YAAY;IACZ,WAAW;IACX,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;AACtB;AACA;;;IAGI,kBAAkB;IAClB,eAAe;IACf,gBAAgB;IAChB,cAAc;AAClB;AACA;;;IAGI,kBAAkB;IAClB,eAAe;IACf,YAAY;IACZ,gBAAgB;AACpB;AACA;IACI,cAAc;AAClB;AACA;IACI,aAAa;IACb,kCAAkC;IAClC,aAAa;IACb,yBAAyB;IACzB,mBAAmB;AACvB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,eAAe;AACnB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,0BAA0B;IAC1B,uCAAuC;IACvC,uBAAuB;IACvB,+BAA+B;AACnC;AACA;IACI,eAAe;IACf,yBAAyB;AAC7B;AACA;IACI,sBAAsB;IACtB,6BAA6B;AACjC;AACA;IACI,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,2BAA2B;AAC/B;AACA;IACI,aAAa;IACb,uBAAuB;AAC3B;AACA;;IAEI,YAAY;AAChB;AACA;IACI,0BAA0B;IAC1B,uCAAuC;AAC3C;AACA;IACI,0BAA0B;AAC9B;AACA;IACI;QACI,kBAAkB;IACtB;IACA;QACI,gBAAgB;IACpB;IACA;QACI,8CAA8C;QAC9C,2BAA2B;QAC3B,mBAAmB;QACnB,YAAY;IAChB;IACA;QACI,kBAAkB;IACtB;IACA;QACI,kBAAkB;IACtB;IACA;QACI,kBAAkB;IACtB;IACA;QACI,mBAAmB;QACnB,aAAa;QACb,8BAA8B;QAC9B,+BAA+B;QAC/B,aAAa;QACb,YAAY;QACZ,oBAAoB;IACxB;IACA;QACI,kBAAkB;IACtB;IACA;QACI,aAAa;IACjB;IACA;QACI,YAAY;QACZ,WAAW;QACX,eAAe;IACnB;AACJ;AACA;IACI;QACI,YAAY;QACZ,WAAW;IACf;IACA;QACI,YAAY;QACZ,WAAW;QACX,cAAc;QACd,eAAe;QACf,gBAAgB;QAChB,kBAAkB;QAClB,iBAAiB;QACjB,kBAAkB;IACtB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,kCAAkC;QAClC,0BAA0B;IAC9B;IACA;QACI,kBAAkB;IACtB;IACA;QACI,kBAAkB;QAClB,gBAAgB;IACpB;IACA;QACI,kBAAkB;QAClB,gBAAgB;IACpB;IACA;QACI,aAAa;QACb,kBAAkB;QAClB,YAAY;IAChB;AACJ;AACA;IACI;QACI,eAAe;QACf,cAAc;IAClB;IACA;QACI,YAAY;QACZ,WAAW;IACf;IACA;QACI,UAAU;QACV,MAAM;IACV;IACA;QACI,gBAAgB;IACpB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,YAAY;IAChB;IACA;QACI,eAAe;QACf,kBAAkB;IACtB;IACA;QACI,kBAAkB;IACtB;IACA;QACI,gBAAgB;IACpB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,YAAY;QACZ,WAAW;QACX,eAAe;IACnB;IACA;QACI,oBAAoB;IACxB;IACA;QACI,UAAU;QACV,oBAAoB;QACpB,eAAe;IACnB;IACA;;;QAGI,eAAe;IACnB;IACA;;;QAGI,eAAe;IACnB;IACA;QACI,YAAY;QACZ,WAAW;QACX,eAAe;IACnB;IACA;QACI,UAAU;QACV,mBAAmB;QACnB,iBAAiB;IACrB;IACA;QACI,gBAAgB;QAChB,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;QACf,kBAAkB;QAClB,kBAAkB;IACtB;IACA;;QAEI,YAAY;QACZ,WAAW;IACf;AACJ",sourcesContent:["@font-face {\n    font-family: 'Russo';\n    src: url('./fonts/RussoOne-Regular.ttf') format('truetype');\n    font-weight: 400;\n    font-style: normal;\n}\n@font-face {\n    font-family: 'Gar';\n    src: url('./fonts/EBGaramond-VariableFont_wght.ttf') format('truetype');\n    font-style: normal;\n}\n@font-face {\n    font-family: 'GarItalic';\n    src: url('./fonts/EBGaramond-Italic-VariableFont_wght.ttf') format('truetype');\n    font-style: normal;\n}\n* {\n    padding: 0;\n    margin: 0;\n    font-family: 'Gar', Georgia, 'Times New Roman', Times, serif;\n}\n.body {\n    background-color: #90e0ef;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    min-width: 100vw;\n}\n.headerContainer {\n    display: grid;\n    grid-template-columns: repeat(16, 1fr);\n    justify-items: center;\n    align-items: center;\n}\n.headerTitle {\n    grid-column: 2/16;\n    font-family: 'Russo', Times, Georgia;\n    font-size: 70px;\n    font-weight: 700;\n    padding: 15px 0 0 0;\n}\n.menuBtnContainer {\n    display: none;\n    grid-column: 16/17;\n}\n.menuBtn:hover {\n    cursor: pointer;\n}\n.commContainer {\n    display: grid;\n    justify-items: center;\n}\n.comms {\n    min-width: 850px;\n    padding: 1vh 3vw;\n    font-size: 32px;\n    font-weight: 600;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    color:#90e0ef;\n    border-radius: 15px;\n    border: 4px solid #90e0ef;\n    outline: 4px solid black;\n    margin-bottom: 15px;\n}\n.placeContainer {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    margin-bottom: 15px;\n}\n.placeBtnContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n}\n.placeBtnContainer > button {\n    font-family: 'Russo', Georgia, 'Times New Roman', Times, serif;\n    font-size: 20px;\n    font-weight: 500;\n    height: 44px;\n    width: 125px;\n    text-align: center;\n    background-color: white;\n    border: none;\n    border-radius: 10px;\n    box-shadow: inset 0 0 5px rgb(45, 100, 170);\n    transition-duration: 250ms;\n    transition-timing-function: ease-in-out;\n}\n.placeBtnContainer > button:hover {\n    cursor: pointer;\n    box-shadow: inset 0 0 1px #0077B6;\n}\n.placeBtnContainer > button:active {\n    transform: scale(0.98);\n    box-shadow: 2px 2px 5px black;\n}\n.placeInstructions {\n    padding: 2vh 2vw;\n    text-align: center;\n}\n.instructTitle {\n    font-size: 24px;\n}\n.main {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    background-color:#90e0ef;\n}\n.mainContainer {\n    display: grid;\n    grid-template-columns: 3fr 2fr 3fr;\n    padding: 0 0 20px 0;\n}\n.initialContent {\n    grid-column: 2/3;\n    display: grid;\n    grid-template-rows: 1fr 1fr 1fr;\n    justify-items: center;\n    gap: 20px;\n    padding: 20px 50px 40px 50px;\n    border: 16px double black;\n    border-radius: 25px;\n}\n.instructionsContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 300px;\n}\n.instructions {\n    font-size: 28px;\n    font-style: italic;\n}\n.inputContainer {\n    display: grid;\n    place-items: center;\n}\n.inputContainer > label {\n    font-size: 20px;\n}\n.inputField {\n    padding: 10px;\n    border: 2px solid black;\n    border-radius: 10px;\n    margin: 10px;\n    font-size: 18px;\n    text-align: center;\n}\n.inputField:focus {\n    outline: none;\n}\n.inputField:focus::placeholder {\n    color: transparent;\n}\n.startContainer {\n    display: flex;\n    align-items: center;\n}\n.start {\n    padding: 10px 20px;\n    background-color: white;\n    border: 4px solid black;\n    border-radius: 10px;\n    font-family: 'Russo', Georgia, 'Times New Roman', Times, serif;\n    font-size: 24px;\n    font-weight: 500;\n    transition-duration: 300ms;\n    transition-timing-function: ease-in-out;\n    box-shadow: inset 0 0 5px #90e0ef;\n}\n.start:hover {\n    cursor: pointer;\n    box-shadow: 0 0 5px #0077B6;\n}\n.start:active {\n    transform: scale(0.98);\n    box-shadow: 2px 2px 5px black;\n}\n.displayBoard {\n    grid-area: 1/2/4/3;\n    max-height: 418px;\n    max-width: 418px;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    gap: 2px;\n    margin: 0 auto;\n    padding: 10px;\n    border: 5px solid  white;\n    border-radius: 10px;\n    box-shadow: inset 0 0 40px rgb(35, 100, 170);\n}\n.mainContainer .boardContainer:nth-child(2) {\n    grid-column: 3/4;\n}\n.legendContainer {\n    display: grid;\n    grid-template-rows: 1fr 2fr 4fr;\n    grid-area: 1/2/2/3;\n    padding: 10px;\n    box-shadow: inset 0 0 10px rgb(45, 100, 170);\n}\n.legendBox {\n    grid-row: 3/4;\n}\n.objectiveBox {\n    grid-row: 1/2;\n}\n.instructBox {\n    grid-row: 2/3;\n}\n.legendBox,\n.objectiveBox,\n.instructBox {\n    text-align: center;\n}\n.boardLabel {\n    font-family: 'Russo', Georgia, 'Times New Roman', Times, serif;\n    text-transform: uppercase;\n    text-align: center;\n    font-weight: 700;\n    padding-bottom: 5px;\n    color: rgb(35, 100, 170);\n    text-shadow: 0.2px 0.2px black;\n}\n.col {\n    display: grid;\n    gap: 2px;\n}\n.cell {\n    height: 40px;\n    width: 40px;\n    background-color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 32px;\n    border-radius: 5px;\n}\n.ship {\n    background-color: lightslategray;\n}\n.hit {\n    background-color: rgb(208, 0, 0);\n}\n.miss {\n    background-color: rgb(35, 100, 170);\n}\n.sunk {\n    background-color: rgb(208, 0, 0);\n}\n.legendContainer {\n    background-color: white;\n    border-radius: 15px;\n    margin-top: 10px;\n}\n.legendBox {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n.emojiLi {\n    list-style: none;\n    display: flex;\n    align-items: center;\n    margin: 4px;\n}\n.emojiBox {\n    height: 40px;\n    width: 40px;\n    font-size: 32px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 8px;\n    border-radius: 5px;\n}\n.legendBox,\n.objectiveBox, \n.instructBox {\n    font-style: italic;\n    font-size: 20px;\n    font-weight: 700;\n    color: #0077B6;\n}\n.emojiLi,\n.objectiveText,\n.instructText {\n    font-style: normal;\n    font-size: 16px;\n    color: black;\n    font-weight: 500;\n}\n.instructText {\n    padding: 0 8px;\n}\n.endContainer {\n    display: grid;\n    grid-template-rows: repeat(3, 1fr);\n    padding: 50px;\n    border: 16px double black;\n    border-radius: 25px;\n}\n.banner {\n    text-align: center;\n    font-size: 50px;\n    font-weight: 600;\n}\n.winner {\n    font-size: 38px;\n}\n.playAgain {\n    padding: 10px;\n    border: 4px solid black;\n    border-radius: 10px;\n    font-size: 38px;\n    transition-duration: 500ms;\n    transition-timing-function: ease-in-out;\n    background-color: white;\n    box-shadow: inset 0 0 3px black;\n}\n.playAgain:hover {\n    cursor: pointer;\n    box-shadow: 0 0 3px black;\n}\n.playAgain:active {\n    transform: scale(0.98);\n    box-shadow: 2px 2px 5px black;\n}\n.footerContainer {\n    display: flex;\n    justify-content: center;\n}\n.footerBox {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n}\n.linkContainer {\n    display: flex;\n    justify-content: center;\n}\n.gitIcon,\n.linkIcon {\n    height: 40px;\n}\n.linkContainer > a > img {\n    transition-duration: 500ms;\n    transition-timing-function: ease-in-out;\n}\n.linkContainer > a > img:hover {\n    transform: rotateZ(360deg);\n}\n@media (min-width: 950px) and (max-width: 1350px) {\n    .initialContent {\n        grid-area: 1/3/3/4;\n    }\n    .comms {\n        min-width: 750px;\n    }\n    .mainContainer {\n        grid-template-columns: 1fr 18fr 0.5fr 18fr 1fr;\n        grid-template-rows: 2fr 1fr;\n        align-items: center;\n        width: 100vw;\n    }\n    .mainContainer .boardContainer:first-child {\n        grid-area: 1/2/2/3;\n    }\n    .mainContainer .boardContainer:nth-child(2) {\n        grid-area: 1/4/2/5;\n    }\n    .displayBoard {\n        grid-area: 1/3/3/4;\n    }\n    .legendContainer {\n        grid-area: 2/2/3/-2;\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        height: 220px;\n        width: 750px;\n        justify-self: center;\n    }\n    .legendBox {\n        grid-area: 1/2/4/3;\n    }\n    .instructBox {\n        grid-row: 2/4;\n    }\n    .emojiBox {\n        height: 36px;\n        width: 36px;\n        font-size: 28px;\n    }\n}\n@media (max-width: 950px) {\n    .menuBtn {\n        height: 40px;\n        width: 40px;\n    }\n    .comms {\n        min-width: 0;\n        width: 100%;\n        padding: 1vh 0;\n        font-size: 20px;\n        border-radius: 0;\n        border-right: none;\n        border-left: none;\n        margin-bottom: 5px;\n    }\n    .placeBtnContainer > button {\n        font-size: 18px;\n    }\n    .instructTitle {\n        font-size: 20px;\n    }\n    .placeInstructions .instructText {\n        font-size: 14px;\n    }\n    .mainContainer {\n        grid-template-rows: repeat(2, 1fr);\n        grid-template-columns: 1fr;\n    }\n    .initialContent {\n        grid-area: 1/1/4/2;\n    }\n    .mainContainer .boardContainer:first-child {\n        grid-area: 2/1/3/2;\n        margin-top: 10px;\n    }\n    .mainContainer .boardContainer:nth-child(2) {\n        grid-area: 1/1/2/2;\n        margin-top: 10px;\n    }\n    .legendContainer {\n        display: none;\n        grid-area: 1/1/3/2;\n        width: 450px;\n    }\n}\n@media (max-width: 549px) {\n    .headerTitle {\n        font-size: 36px;\n        padding: 5px 0;\n    }\n    .menuBtn {\n        height: 25px;\n        width: 25px;\n    }\n    .initialContent {\n        padding: 0;\n        gap: 0;\n    }\n    .instructionsContainer {\n        min-width: 260px;\n    }\n    .instructions {\n        font-size: 20px;\n    }\n    .inputContainer > label {\n        font-size: 16px;\n    }\n    .inputField {\n        width: 200px;\n    }\n    .comms {\n        font-size: 16px;\n        text-align: center;\n    }\n    .placeContainer {\n        margin-bottom: 5px;\n    }\n    .placeInstructions {\n        padding: 1vh 2vw;\n    }\n    .instructTitle {\n        font-size: 16px;\n    }\n    .placeInstructions .instructText {\n        font-size: 14px;\n    }\n    .cell {\n        height: 25px;\n        width: 25px;\n        font-size: 20px;\n    }\n    .mainContainer {\n        padding-bottom: 10px;\n    }\n    .legendContainer {\n        width: 90%;\n        justify-self: center;\n        margin-top: 5px;\n    }\n    .objectiveBox,\n    .instructBox,\n    .legendBox {\n        font-size: 16px;\n    }\n    .objectiveText,\n    .instructText,\n    .emojiLi {\n        font-size: 14px;\n    }\n    .emojiBox {\n        height: 25px;\n        width: 25px;\n        font-size: 20px;\n    }\n    .endContainer {\n        padding: 0;\n        place-items: center;\n        min-height: 275px;\n    }\n    .banner {\n        min-width: 260px;\n        font-size: 36px;\n    }\n    .winner {\n        font-size: 28px;\n    }\n    .playAgain {\n        font-size: 24px;\n        font-weight: 700px;\n        padding: 10px 30px;\n    }\n    .gitIcon,\n    .linkIcon {\n        height: 25px;\n        width: 25px;\n    }\n}"],sourceRoot:""}]);const m=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(o[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);i&&o[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(r," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},o=[],A=0;A<n.length;A++){var s=n[A],l=i.base?s[0]+i.base:s[0],d=a[l]||0,c="".concat(l," ").concat(d);a[l]=d+1;var p=t(c),C={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(C);else{var u=r(C,i);i.byIndex=A,e.splice(A,0,{identifier:c,updater:u,references:1})}o.push(c)}return o}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=i(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var A=t(a[o]);e[A].references--}for(var s=i(n,r),l=0;l<a.length;l++){var d=t(a[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,r&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},733:(n,e,t)=>{t.d(e,{Z:()=>i});const i=()=>{const n=[],e=[],t=(e,t,i,r)=>{let a,o=[];if(t)for(let t=0;t<e;t++)o.push(n[i+t][r]>0);else for(let t=0;t<e;t++)o.push(n[i][r+t]>0);return a=o.find((n=>1==n)),a},i=(e,t,i,r)=>{let a;return t?(a=i+e,a>n.length):(a=r+e,a>n[i].length)},r=n=>e.find((e=>e.marker===n)),a=()=>e.every((n=>!0===n.isSunk())),o=[],A=(e,t,i)=>n[e][t]=i,s=(e,t,i)=>{if(i.value=n[e][t],i.value>0){const o=((e,t)=>{const i=r(n[e][t]).hitPlus();return A(e,t,n[e][t]+10),i})(e,t);o&&(i.sunk=!0,a()&&(i.allSunk=!0)),i.ship=i.value,i.value=!0}else((n,e)=>{((n,e)=>{o.push([n,e])})(n,e),A(n,e,-1)})(e,t),i.value=!1;return i};return{board:n,create:e=>{for(let t=0;t<e;t++){let t=[];n.push(t);for(let n=0;n<e;n++)t.push(0)}return n},placeShip:(r,a,o,A)=>{if(i(r.length,a,o,A)||t(r.length,a,o,A))return!1;if(a)for(let e=0;e<r.length;e++)n[o+e][A]=r.marker,r.coords.push([o+e,A]);else for(let e=0;e<r.length;e++)n[o][A+e]=r.marker,r.coords.push([o,A+e]);return e.push(r),!0},checkPlace:t,checkMiss:(e,t,i,r)=>{let a,o=[];if(t)for(let t=0;t<e;t++)o.push(-1==n[i+t][r]);else for(let t=0;t<e;t++)o.push(-1==n[i][r+t]);return a=o.find((n=>1==n)),a},checkProb:(n,e,t,i,r)=>{let a=1;const o=[];for(let r=0;r<n;r++)e?o.push([Number(t)+r,i]):o.push([t,Number(i)+r]);return r.forEach((n=>{for(let e=0;e<o.length;e++)n[0]==o[e][0]&&n[1]==o[e][1]&&(a*=50)})),a},checkOnBoard:i,whichShip:r,receiveAttack:(e,t)=>{const i={sunk:!1,allSunk:!1};return((e,t)=>!(n[e][t]>10||-1==n[e][t]))(e,t)?s(e,t,i):(i.value=0,i)},allSunk:a}}},922:(n,e,t)=>{t.d(e,{u:()=>a});var i=t(923),r=t(489);const a=(()=>{const n=(0,i.a)("div",{class:"commContainer"}),e=["empty","submarine","patrol boat","cruiser","destroyer","battle carrier"],t=[{0:"you",1:"their"},{0:"they",1:"your"}];return{buildComms:()=>{const e=(0,i.a)("div",{class:"comms"});return e.textContent="",e.style.display="none",n.appendChild(e),n},clear:()=>{n.firstChild.textContent="",n.removeChild(n.lastChild)},instruct:(e,t)=>{n.firstChild.textContent=`${e.codename}: Place your ${t}.`},message:(e,t)=>{n.firstChild.textContent=`${e.codename}: ${t}`},updateText:(i,r,a,o,A,s)=>{let l=s?t[0]:t[1];if(r)n.firstChild.textContent=`Attention ${i.codename}: Error! Must select new coordinates.`;else if(!0===o)n.firstChild.textContent=`${i.codename} fires a shot and ${l[0]} sunk ${l[1]} ${e[A]}!`;else{let e=a?"lands a strike!":"misses!";n.firstChild.textContent=`${i.codename} attacks and ${e}`}},endGame:e=>{const t=n.nextElementSibling;(0,i.q)(n),(0,i.q)(t);const a=(0,i.a)("div",{class:"endContainer"}),o=(0,i.a)("div",{class:"banner"});o.textContent="Game Over!";const A=(0,i.a)("div",{class:"winner"});A.textContent=`Winner: ${e.codename}`;const s=(0,i.a)("button",{class:"playAgain"});s.textContent="Play Again",t.appendChild(a),a.appendChild(o),a.appendChild(A),a.appendChild(s),s.addEventListener("click",(()=>{t.parentElement.removeChild(t),n.parentElement.removeChild(n),(0,r.Q)()})),t.parentElement.children[0].lastChild.style.display="none"}}})()},605:(n,e,t)=>{t.d(e,{Z:()=>h});var i=t(733);const r=n=>{let e=0;return{codename:n,wins:e,attack:(n,e)=>e.receiveAttack(n[0],n[1]),addWin:()=>e+=1}},a=()=>{const n=r("The Kraken"),e=(0,i.Z)();e.create(10);const t=()=>Math.floor(10*Math.random()),a=()=>[t(),t()],o=[],A=n=>{let e=!0;for(let t=0;t<o.length;t++)o[t][0]===n[0]&&o[t][1]===n[1]&&(e=!1);return e},s=()=>0==Math.floor(2*Math.random()),l=[],d=(n,e,t,i,r,a)=>{for(let o=0;o<t;o++){const A=n.checkProb(t,i,r,a,l);i?e[Number(r)+o][a]+=A:e[r][Number(a)+o]+=A}c(n,e)},c=(n,e)=>{for(let t=0;t<n.board.length;t++)for(let i=0;i<n.board[t].length;i++)n.board[t][i]>0&&(e[t][i]=0)};return Object.assign({},n,{randomAttack:n=>{const e=(()=>{let n=a();for(;!A(n);)n=a();return n})();o.push(e);const t={};return t.coord=e,t.obj=n.receiveAttack(e[0],e[1]),t}},{smartAttack:n=>{const t=(()=>{const n=(0,i.Z)();return n.create(10),n})();((n,e,t)=>{Object.keys(e).forEach((i=>{e[i].sunk||((n,e,t)=>{for(let i=0;i<n.board.length;i++)for(let r=0;r<n.board[i].length;r++)n.checkOnBoard(e.length,!0,i,r)||n.checkMiss(e.length,!0,i,r)||d(n,t.board,e.length,!0,i,r);for(let i=0;i<n.board.length;i++)for(let r=0;r<n.board[i].length;r++)n.checkOnBoard(e.length,!1,i,r)||n.checkMiss(e.length,!1,i,r)||d(n,t.board,e.length,!1,i,r)})(n,e[i],t)}))})(e,n.fleet,t);const r=(n=>{const e={max:0};for(let t=0;t<n.length;t++)for(let i=0;i<n[t].length;i++)n[t][i]>e.max&&(e.max=n[t][i],e.coords=[t,i]);return e})(t.board),a={};return a.coord=r.coords,a.obj=n.gb.receiveAttack(a.coord[0],a.coord[1]),((n,t)=>{const i=n.coord;var r;1==n.obj.value?(1==n.obj.sunk?(n=>{n.coords.forEach((n=>{let e=l.findIndex((e=>{if(e[0]==n[0]&&e[1]==n[1])return e}));l.splice(e,1)}))})(t.gb.whichShip(n.obj.ship)):(r=i,l.push(r)),e.board[i[0]][i[1]]=1):e.board[i[0]][i[1]]=-1})(a,n),a}},{placeFleet:n=>{Object.keys(n.fleet).forEach((e=>{let t=s(),i=a();for(;!n.gb.placeShip(n.fleet[e],t,i[0],i[1]);)t=s(),i=a()}))}})};var o=t(643),A=t(923);const s=n=>{n.addEventListener("mouseenter",(()=>{"cell"==n.classList.value?(n.style.cursor="crosshair",n.style.backgroundColor="#38B000"):(n.style.cursor="not-allowed",n.style.backgroundColor="#000000")})),n.addEventListener("mouseout",(()=>{Array.from(n.parentElement.children).forEach((n=>{1==n.classList.length?n.style.backgroundColor="white":"cell hit"==n.classList.value?n.style.backgroundColor="rgb(208, 0, 0)":"cell miss"==n.classList.value?n.style.backgroundColor="rgb(35, 100, 170)":"cell sunk"==n.classList.value&&(n.style.backgroundColor="rgb(208, 0, 0)")}))}))},l=(n,e,t)=>{const i=n.board,r=(0,A.a)("div",{class:"displayBoard"});for(let n=0;n<i.length;n++){const a=(0,A.a)("div",{class:"col",id:`${n}`});r.appendChild(a);for(let r=0;r<i[n].length;r++){const i=(0,A.a)("div",{class:"cell",id:`${n}${r}`});e&&(i.addEventListener("click",(e=>{h.getTurn()&&t([n,r],e)})),s(i)),a.appendChild(i)}}return r},d=(n,e)=>{const t=n.board;for(let n=0;n<t.length;n++)for(let i=0;i<t[n].length;i++)t[n][i]>0&&e.children[n].children[i].classList.add("ship")},c=(n,e,t,i,r,a)=>{t.sunk?i.whichShip(t.ship).coords.forEach((n=>{r.children[n[0]].children[n[1]].classList="cell sunk",r.children[n[0]].children[n[1]].textContent=`${a}`})):t.value?(r.children[n].children[e].classList.add("hit"),r.children[n].children[e].textContent="🔥"):(r.children[n].children[e].classList.add("miss"),r.children[n].children[e].textContent="🌊")},p=(n,e,t,i)=>{const r=(0,A.a)("div",{class:"boardContainer"});return r.appendChild((n=>{const e=(0,A.a)("div",{class:"labelContainer"}),t=(0,A.a)("div",{class:"boardLabel"});return t.textContent=`${n} waters`,e.appendChild(t),e})(t)),r.appendChild(l(n,e,i)),r};var C=t(922);const u=(()=>{let n=!0;const e=()=>n,t=(n,e,t,i,r)=>!n.checkOnBoard(e.length,t,i,r)&&!n.checkPlace(e.length,t,i,r),i=(i,r,a,o,A)=>{i.addEventListener("mouseenter",(()=>{t(r,a,e(),o,A)?(i.style.cursor="pointer",((e,t)=>{const i=Array.from(e.id);let r;for(let e=0;e<t;e++)r=n?`${Number(i[0])+e}${i[1]}`:`${i[0]}${Number(i[1])+e}`,document.getElementById(r).style.backgroundColor="slategray"})(i,a.length)):(i.style.cursor="not-allowed",i.style.backgroundColor="rgb(208, 0, 0)")})),i.addEventListener("mouseout",(()=>{Array.from(document.querySelectorAll("div.cell")).forEach((n=>{1==n.classList.length?n.style.backgroundColor="white":2==n.classList.length&&(n.style.backgroundColor="slategray")}))}))};let r,a,o,s,c,p=0;const u=(n,e)=>{p<5?(C.u.instruct(e.player,s[p]),B(n,e.gb,e.fleet[s[p]])):(console.log("Next step of gameloop!"),m())},B=(A,s,C)=>{(n=>{o=n})(C),A.appendChild(l(s,!1)),d(a,c.children[0]),((a,A)=>{Array.from(document.querySelectorAll("div.cell")).forEach((s=>{const l=Number(s.id.charAt(0)),d=Number(s.id.charAt(1));i(s,a,A,l,d),((i,a,A,s,l)=>{t(a,A,e(),s,l)&&i.addEventListener("click",(()=>{((e,t)=>{r.gb.placeShip(o,n,e,t),p++,c.removeChild(c.lastChild),u(c,r)})(s,l)}))})(s,a,A,l,d)}))})(s,C)},m=()=>{C.u.clear(),h.launchGame(c),window.matchMedia("(min-width: 550px)")&&(c.parentElement.parentElement.children[0].children[1].style.display="block")};return{hover:i,start:(e,t,i)=>{var l;e.parentElement.parentElement.children[1].appendChild((e=>{const t=(0,A.a)("div",{class:"placeContainer"}),i=(0,A.a)("div",{class:"placeBtnContainer"}),s=(0,A.a)("button",{class:"axisBtn"});s.textContent="Rotate";const l=(0,A.a)("button",{class:"randomBtn"});l.textContent="Random";const d=(0,A.a)("div",{class:"placeInstructions"}),p=(0,A.a)("div",{class:"instructTitle"});p.textContent="Instructions:";const C=(0,A.a)("div",{class:"instructText"});C.textContent="Select coordinates on board to place current ship.";const u=(0,A.a)("div",{class:"instructText"});return u.textContent="Use buttons to rotate ship or randomly deploy entire fleet.",s.addEventListener("click",(()=>{n=!n,c.removeChild(c.lastChild),B(c,a,o)})),l.addEventListener("click",(()=>{e.player.placeFleet(r),c.removeChild(c.lastChild),m()})),t.appendChild(i),i.appendChild(s),i.appendChild(l),t.appendChild(d),d.appendChild(p),d.appendChild(C),d.appendChild(u),t})(i)),c=e,r=l=t,a=l.gb,s=Object.keys(l.fleet),u(e,t)}}})(),B=[{emoji:" ",text:"friendly ship",class:"ship"},{emoji:"🌊",text:"attack miss",class:"miss"},{emoji:"🔥",text:"attack hit",class:"hit"},{emoji:"🔱",text:"you sunk enemy ship",class:"sunk"},{emoji:"🏴‍☠️",text:"enemy sunk friendly ship",class:"sunk"}],m=n=>{let e;e=n?r(`${n}`):a();const t=(0,i.Z)();return t.create(10),{player:e,gb:t,fleet:(0,o.X)()}},g=(()=>{let n,e,t,i,r=!0;const a=()=>r=!r,o=(e,r,a)=>{a.appendChild(p(e,!1,"friendly")),d(e,a.firstChild.lastChild),t=a.firstChild.lastChild,a.appendChild(p(r,!0,"enemy",g.turn)),i=a.lastChild.lastChild,a.appendChild((()=>{const n=(0,A.a)("div",{class:"legendContainer"}),e=(0,A.a)("div",{class:"legendBox"});e.textContent="Legend:";const t=(0,A.a)("ul",{class:"legendList"});B.forEach((n=>{const e=(0,A.a)("li",{class:"emojiLi"}),i=(0,A.a)("div",{class:`emojiBox ${n.class}`});i.textContent=`${n.emoji}`;const r=(0,A.a)("div",{class:"emojiText"});r.textContent=`- ${n.text}`,e.appendChild(i),e.appendChild(r),t.appendChild(e)})),e.appendChild(t),n.appendChild(e);const i=(0,A.a)("div",{class:"instructBox"});i.textContent="Instructions:";const r=(0,A.a)("div",{class:"instructText"});r.textContent="Select coordinates in enemy waters to launch an attack. The board will indicate a hit or miss, or if you sunk the enemy ship. Find and eliminate all five enemy ships before they eliminate yours!";const a=(0,A.a)("div",{class:"objectiveBox"});a.textContent="Objective:";const o=(0,A.a)("div",{class:"objectiveText"});return o.textContent="Sink the enemy fleet!",a.appendChild(o),n.appendChild(a),i.appendChild(r),n.appendChild(i),n})()),C.u.message(n.player,"launch an attack!")};let s={};const l=o=>{let A;s=r?n.player:e.player,r?(A=e.gb.receiveAttack(o[0],o[1]),0===A.value?C.u.updateText(s,!0,""):(c(o[0],o[1],A,e.gb,i,"🔱"),C.u.updateText(s,!1,A.value,A.sunk,A.ship,!0),a())):(A=e.player.smartAttack(n),c(A.coord[0],A.coord[1],A.obj,n.gb,t,"🏴‍☠️"),C.u.updateText(s,!1,A.obj.value,A.obj.sunk,A.obj.ship,!1),a(),A=A.obj),r||A.allSunk||setTimeout((()=>{l(!1)}),1500),A.allSunk&&(a(),console.log("game over"),C.u.endGame(s))};return{getTurn:()=>r,initialTurn:o,initializeGame:(t,i)=>{const r=m(`${t}`),a=m(!1);return i.parentElement.parentElement.children[1].firstChild.style.display="flex",a.player.placeFleet(a),u.start(i,r,a),n=r,e=a,{p1:r,p2:a}},launchGame:t=>{o(n.gb,e.gb,t)},turn:l}})(),h=g},489:(n,e,t)=>{t.d(e,{s:()=>c,Q:()=>p});var i=t(923);const r=t.p+"c37a8ed9a593aab5b65c.svg",a=t.p+"5eb3d39757ca9be726d6.svg",o=t.p+"bbcb81dd730af01d5340.svg";var A=t(605),s=t(922);let l=!1;const d=()=>{const n=(0,i.a)("div",{class:"main"}),e=(0,i.a)("div",{class:"mainContainer"}),t=(0,i.a)("div",{class:"initialContent"}),r=(0,i.a)("div",{class:"instructionsContainer"}),a=(0,i.a)("div",{class:"instructions"});a.textContent="Eliminate the enemy fleet!";const o=(0,i.a)("div",{class:"inputContainer"}),s=(0,i.a)("input",{type:"text",id:"username",class:"inputField",placeholder:"Aquaman 🔱"}),l=(0,i.a)("label",{for:"username"});l.textContent="Enter Player Name:";const d=(0,i.a)("div",{class:"startContainer"}),c=(0,i.a)("button",{class:"start"});c.textContent="Start Game!";return c.addEventListener("click",(()=>{(()=>{let n="Aquaman 🔱";s.value&&(n=s.value),(0,i.q)(e),A.Z.initializeGame(n,e)})()})),n.appendChild(e),e.appendChild(t),t.appendChild(r),r.appendChild(a),t.appendChild(o),o.appendChild(l),o.appendChild(s),t.appendChild(d),d.appendChild(c),n},c=()=>{const n=document.querySelector("body"),e=(0,i.a)("div",{class:"body"});e.appendChild((()=>{const n=(0,i.a)("div",{class:"headerContainer"}),e=(0,i.a)("div",{class:"headerTitle"});e.textContent="BATTLESHIP";const t=(0,i.a)("div",{class:"menuBtnContainer"}),a=(0,i.a)("div",{class:"menuBtn"}),o=(0,i.a)("img",{class:"menuIcon"});return o.src=r,o.alt="Info",a.addEventListener("click",(()=>{var n;n=document.querySelector("div.mainContainer"),l=!l,l?(n=>{n.children[0].style.display="none",n.children[1].style.display="none",n.children[2].style.display="grid"})(n):(n=>{n.children[0].style.display="block",n.children[1].style.display="block",n.children[2].style.display="none"})(n)})),n.appendChild(e),n.appendChild(t),t.appendChild(a),a.appendChild(o),n})()),e.appendChild(s.u.buildComms()),e.appendChild(d()),e.appendChild((()=>{const n=(0,i.a)("div",{class:"footerContainer"}),e=(0,i.a)("div",{class:"footerBox"}),t=(0,i.a)("div",{class:"linkContainer"}),r=(0,i.a)("a",{href:"https://github.com/connorwarme",alt:"Github Profile",target:"_blank"}),A=(0,i.a)("img",{class:"gitIcon"});A.src=a,A.alt="Github Profile";const s=(0,i.a)("a",{href:"https://www.linkedin.com/in/connor-warme-103a09167",alt:"LinkedIn Profile",target:"_blank"}),l=(0,i.a)("img",{class:"linkIcon"});l.src=o,l.alt="LinkedIn Profile";const d=(0,i.a)("div",{class:"textContainer"});return d.textContent="Peregrinning Productions",n.appendChild(e),e.appendChild(t),t.appendChild(r),r.appendChild(A),t.appendChild(s),s.appendChild(l),e.appendChild(d),n})()),n.appendChild(e)},p=()=>{const n=document.querySelector("div.body");n.insertBefore(s.u.buildComms(),n.children[1]),n.insertBefore(d(),n.children[2])}},643:(n,e,t)=>{t.d(e,{X:()=>r});const i=(n,e)=>{const t=n;let i=0,r=!1,a=t;e&&(a=e);const o=()=>{i+=1},A=()=>r=t<=i;return{length:t,sunk:r,marker:a,coords:[],getHits:()=>i,hit:o,isSunk:A,hitPlus:()=>(o(),A())}},r=()=>({submarine:i(3,1),patrol:i(2),destroyer:i(3),battleship:i(4),carrier:i(5)})},923:(n,e,t)=>{t.d(e,{a:()=>i,q:()=>a});const i=(n,e)=>{const t=document.createElement(`${n}`);return null==e||r(t,e),t},r=(n,e)=>{Object.entries(e).forEach((([e,t])=>{n.setAttribute(e,t)}))},a=n=>{for(;n.children.length>0;)n.removeChild(n.firstChild)}},873:(n,e,t)=>{n.exports=t.p+"2d561b81d4fd1bf7188a.ttf"},126:(n,e,t)=>{n.exports=t.p+"baa0e0cf79395becf7d7.ttf"},154:(n,e,t)=>{n.exports=t.p+"b2f5b287ccb8fd446eae.ttf"}},m={};function g(n){var e=m[n];if(void 0!==e)return e.exports;var t=m[n]={id:n,exports:{}};return B[n](t,t.exports,g),t.exports}g.m=B,g.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return g.d(e,{a:e}),e},g.d=(n,e)=>{for(var t in e)g.o(e,t)&&!g.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),g.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;g.g.importScripts&&(n=g.g.location+"");var e=g.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),g.p=n})(),g.b=document.baseURI||self.location.href,g.nc=void 0,n=g(489),e=g(379),t=g.n(e),i=g(795),r=g.n(i),a=g(569),o=g.n(a),A=g(565),s=g.n(A),l=g(216),d=g.n(l),c=g(589),p=g.n(c),C=g(426),(u={}).styleTagTransform=p(),u.setAttributes=s(),u.insert=o().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=d(),t()(C.Z,u),C.Z&&C.Z.locals&&C.Z.locals,(0,n.s)()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvYm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9jb21zRE9NLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvcGxheWVycy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2JvYXJkRE9NLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvcGxhY2VGbGVldERPTS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2xlZ2VuZERPTS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2dhbWVsb29wLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvaW5pdGlhbERPTS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3NoaXAuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy91dGlsaXR5LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuL2ZvbnRzL1J1c3NvT25lLVJlZ3VsYXIudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiLi9mb250cy9FQkdhcmFtb25kLVZhcmlhYmxlRm9udF93Z2h0LnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fID0gbmV3IFVSTChcIi4vZm9udHMvRUJHYXJhbW9uZC1JdGFsaWMtVmFyaWFibGVGb250X3dnaHQudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSdXNzbyc7XFxuICAgIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG59XFxuQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnR2FyJztcXG4gICAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fICsgXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbn1cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdHYXJJdGFsaWMnO1xcbiAgICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18gKyBcIikgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcbioge1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIGZvbnQtZmFtaWx5OiAnR2FyJywgR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcXG59XFxuLmJvZHkge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTBlMGVmO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gICAgbWluLXdpZHRoOiAxMDB2dztcXG59XFxuLmhlYWRlckNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDE2LCAxZnIpO1xcbiAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5oZWFkZXJUaXRsZSB7XFxuICAgIGdyaWQtY29sdW1uOiAyLzE2O1xcbiAgICBmb250LWZhbWlseTogJ1J1c3NvJywgVGltZXMsIEdlb3JnaWE7XFxuICAgIGZvbnQtc2l6ZTogNzBweDtcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gICAgcGFkZGluZzogMTVweCAwIDAgMDtcXG59XFxuLm1lbnVCdG5Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBncmlkLWNvbHVtbjogMTYvMTc7XFxufVxcbi5tZW51QnRuOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uY29tbUNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcXG59XFxuLmNvbW1zIHtcXG4gICAgbWluLXdpZHRoOiA4NTBweDtcXG4gICAgcGFkZGluZzogMXZoIDN2dztcXG4gICAgZm9udC1zaXplOiAzMnB4O1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuICAgIGNvbG9yOiM5MGUwZWY7XFxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxuICAgIGJvcmRlcjogNHB4IHNvbGlkICM5MGUwZWY7XFxuICAgIG91dGxpbmU6IDRweCBzb2xpZCBibGFjaztcXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcXG59XFxuLnBsYWNlQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMmZyO1xcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbn1cXG4ucGxhY2VCdG5Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuLnBsYWNlQnRuQ29udGFpbmVyID4gYnV0dG9uIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSdXNzbycsIEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gICAgaGVpZ2h0OiA0NHB4O1xcbiAgICB3aWR0aDogMTI1cHg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDVweCByZ2IoNDUsIDEwMCwgMTcwKTtcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMjUwbXM7XFxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcXG59XFxuLnBsYWNlQnRuQ29udGFpbmVyID4gYnV0dG9uOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMXB4ICMwMDc3QjY7XFxufVxcbi5wbGFjZUJ0bkNvbnRhaW5lciA+IGJ1dHRvbjphY3RpdmUge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTgpO1xcbiAgICBib3gtc2hhZG93OiAycHggMnB4IDVweCBibGFjaztcXG59XFxuLnBsYWNlSW5zdHJ1Y3Rpb25zIHtcXG4gICAgcGFkZGluZzogMnZoIDJ2dztcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG4uaW5zdHJ1Y3RUaXRsZSB7XFxuICAgIGZvbnQtc2l6ZTogMjRweDtcXG59XFxuLm1haW4ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZmxleC1ncm93OiAxO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiM5MGUwZWY7XFxufVxcbi5tYWluQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAzZnIgMmZyIDNmcjtcXG4gICAgcGFkZGluZzogMCAwIDIwcHggMDtcXG59XFxuLmluaXRpYWxDb250ZW50IHtcXG4gICAgZ3JpZC1jb2x1bW46IDIvMztcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyIDFmcjtcXG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDIwcHg7XFxuICAgIHBhZGRpbmc6IDIwcHggNTBweCA0MHB4IDUwcHg7XFxuICAgIGJvcmRlcjogMTZweCBkb3VibGUgYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XFxufVxcbi5pbnN0cnVjdGlvbnNDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgbWluLXdpZHRoOiAzMDBweDtcXG59XFxuLmluc3RydWN0aW9ucyB7XFxuICAgIGZvbnQtc2l6ZTogMjhweDtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cXG4uaW5wdXRDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcbn1cXG4uaW5wdXRDb250YWluZXIgPiBsYWJlbCB7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuLmlucHV0RmllbGQge1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgbWFyZ2luOiAxMHB4O1xcbiAgICBmb250LXNpemU6IDE4cHg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuLmlucHV0RmllbGQ6Zm9jdXMge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbn1cXG4uaW5wdXRGaWVsZDpmb2N1czo6cGxhY2Vob2xkZXIge1xcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XFxufVxcbi5zdGFydENvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5zdGFydCB7XFxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIGJvcmRlcjogNHB4IHNvbGlkIGJsYWNrO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBmb250LWZhbWlseTogJ1J1c3NvJywgR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcXG4gICAgZm9udC1zaXplOiAyNHB4O1xcbiAgICBmb250LXdlaWdodDogNTAwO1xcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAzMDBtcztcXG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgNXB4ICM5MGUwZWY7XFxufVxcbi5zdGFydDpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm94LXNoYWRvdzogMCAwIDVweCAjMDA3N0I2O1xcbn1cXG4uc3RhcnQ6YWN0aXZlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk4KTtcXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCA1cHggYmxhY2s7XFxufVxcbi5kaXNwbGF5Qm9hcmQge1xcbiAgICBncmlkLWFyZWE6IDEvMi80LzM7XFxuICAgIG1heC1oZWlnaHQ6IDQxOHB4O1xcbiAgICBtYXgtd2lkdGg6IDQxOHB4O1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcXG4gICAgZ2FwOiAycHg7XFxuICAgIG1hcmdpbjogMCBhdXRvO1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBib3JkZXI6IDVweCBzb2xpZCAgd2hpdGU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCA0MHB4IHJnYigzNSwgMTAwLCAxNzApO1xcbn1cXG4ubWFpbkNvbnRhaW5lciAuYm9hcmRDb250YWluZXI6bnRoLWNoaWxkKDIpIHtcXG4gICAgZ3JpZC1jb2x1bW46IDMvNDtcXG59XFxuLmxlZ2VuZENvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDJmciA0ZnI7XFxuICAgIGdyaWQtYXJlYTogMS8yLzIvMztcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDEwcHggcmdiKDQ1LCAxMDAsIDE3MCk7XFxufVxcbi5sZWdlbmRCb3gge1xcbiAgICBncmlkLXJvdzogMy80O1xcbn1cXG4ub2JqZWN0aXZlQm94IHtcXG4gICAgZ3JpZC1yb3c6IDEvMjtcXG59XFxuLmluc3RydWN0Qm94IHtcXG4gICAgZ3JpZC1yb3c6IDIvMztcXG59XFxuLmxlZ2VuZEJveCxcXG4ub2JqZWN0aXZlQm94LFxcbi5pbnN0cnVjdEJveCB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuLmJvYXJkTGFiZWwge1xcbiAgICBmb250LWZhbWlseTogJ1J1c3NvJywgR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbiAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xcbiAgICBjb2xvcjogcmdiKDM1LCAxMDAsIDE3MCk7XFxuICAgIHRleHQtc2hhZG93OiAwLjJweCAwLjJweCBibGFjaztcXG59XFxuLmNvbCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdhcDogMnB4O1xcbn1cXG4uY2VsbCB7XFxuICAgIGhlaWdodDogNDBweDtcXG4gICAgd2lkdGg6IDQwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiAzMnB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxufVxcbi5zaGlwIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRzbGF0ZWdyYXk7XFxufVxcbi5oaXQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjA4LCAwLCAwKTtcXG59XFxuLm1pc3Mge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzUsIDEwMCwgMTcwKTtcXG59XFxuLnN1bmsge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjA4LCAwLCAwKTtcXG59XFxuLmxlZ2VuZENvbnRhaW5lciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcbn1cXG4ubGVnZW5kQm94IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5lbW9qaUxpIHtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgbWFyZ2luOiA0cHg7XFxufVxcbi5lbW9qaUJveCB7XFxuICAgIGhlaWdodDogNDBweDtcXG4gICAgd2lkdGg6IDQwcHg7XFxuICAgIGZvbnQtc2l6ZTogMzJweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG1hcmdpbi1yaWdodDogOHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxufVxcbi5sZWdlbmRCb3gsXFxuLm9iamVjdGl2ZUJveCwgXFxuLmluc3RydWN0Qm94IHtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICAgIGNvbG9yOiAjMDA3N0I2O1xcbn1cXG4uZW1vamlMaSxcXG4ub2JqZWN0aXZlVGV4dCxcXG4uaW5zdHJ1Y3RUZXh0IHtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgICBmb250LXNpemU6IDE2cHg7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXG59XFxuLmluc3RydWN0VGV4dCB7XFxuICAgIHBhZGRpbmc6IDAgOHB4O1xcbn1cXG4uZW5kQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMywgMWZyKTtcXG4gICAgcGFkZGluZzogNTBweDtcXG4gICAgYm9yZGVyOiAxNnB4IGRvdWJsZSBibGFjaztcXG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcXG59XFxuLmJhbm5lciB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiA1MHB4O1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbn1cXG4ud2lubmVyIHtcXG4gICAgZm9udC1zaXplOiAzOHB4O1xcbn1cXG4ucGxheUFnYWluIHtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgYm9yZGVyOiA0cHggc29saWQgYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGZvbnQtc2l6ZTogMzhweDtcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XFxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAzcHggYmxhY2s7XFxufVxcbi5wbGF5QWdhaW46aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAzcHggYmxhY2s7XFxufVxcbi5wbGF5QWdhaW46YWN0aXZlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk4KTtcXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCA1cHggYmxhY2s7XFxufVxcbi5mb290ZXJDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmZvb3RlckJveCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmcjtcXG59XFxuLmxpbmtDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmdpdEljb24sXFxuLmxpbmtJY29uIHtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbn1cXG4ubGlua0NvbnRhaW5lciA+IGEgPiBpbWcge1xcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcXG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xcbn1cXG4ubGlua0NvbnRhaW5lciA+IGEgPiBpbWc6aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVooMzYwZGVnKTtcXG59XFxuQG1lZGlhIChtaW4td2lkdGg6IDk1MHB4KSBhbmQgKG1heC13aWR0aDogMTM1MHB4KSB7XFxuICAgIC5pbml0aWFsQ29udGVudCB7XFxuICAgICAgICBncmlkLWFyZWE6IDEvMy8zLzQ7XFxuICAgIH1cXG4gICAgLmNvbW1zIHtcXG4gICAgICAgIG1pbi13aWR0aDogNzUwcHg7XFxuICAgIH1cXG4gICAgLm1haW5Db250YWluZXIge1xcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMThmciAwLjVmciAxOGZyIDFmcjtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMmZyIDFmcjtcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgICAgICB3aWR0aDogMTAwdnc7XFxuICAgIH1cXG4gICAgLm1haW5Db250YWluZXIgLmJvYXJkQ29udGFpbmVyOmZpcnN0LWNoaWxkIHtcXG4gICAgICAgIGdyaWQtYXJlYTogMS8yLzIvMztcXG4gICAgfVxcbiAgICAubWFpbkNvbnRhaW5lciAuYm9hcmRDb250YWluZXI6bnRoLWNoaWxkKDIpIHtcXG4gICAgICAgIGdyaWQtYXJlYTogMS80LzIvNTtcXG4gICAgfVxcbiAgICAuZGlzcGxheUJvYXJkIHtcXG4gICAgICAgIGdyaWQtYXJlYTogMS8zLzMvNDtcXG4gICAgfVxcbiAgICAubGVnZW5kQ29udGFpbmVyIHtcXG4gICAgICAgIGdyaWQtYXJlYTogMi8yLzMvLTI7XFxuICAgICAgICBkaXNwbGF5OiBncmlkO1xcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyIDFmcjtcXG4gICAgICAgIGhlaWdodDogMjIwcHg7XFxuICAgICAgICB3aWR0aDogNzUwcHg7XFxuICAgICAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcXG4gICAgfVxcbiAgICAubGVnZW5kQm94IHtcXG4gICAgICAgIGdyaWQtYXJlYTogMS8yLzQvMztcXG4gICAgfVxcbiAgICAuaW5zdHJ1Y3RCb3gge1xcbiAgICAgICAgZ3JpZC1yb3c6IDIvNDtcXG4gICAgfVxcbiAgICAuZW1vamlCb3gge1xcbiAgICAgICAgaGVpZ2h0OiAzNnB4O1xcbiAgICAgICAgd2lkdGg6IDM2cHg7XFxuICAgICAgICBmb250LXNpemU6IDI4cHg7XFxuICAgIH1cXG59XFxuQG1lZGlhIChtYXgtd2lkdGg6IDk1MHB4KSB7XFxuICAgIC5tZW51QnRuIHtcXG4gICAgICAgIGhlaWdodDogNDBweDtcXG4gICAgICAgIHdpZHRoOiA0MHB4O1xcbiAgICB9XFxuICAgIC5jb21tcyB7XFxuICAgICAgICBtaW4td2lkdGg6IDA7XFxuICAgICAgICB3aWR0aDogMTAwJTtcXG4gICAgICAgIHBhZGRpbmc6IDF2aCAwO1xcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcXG4gICAgICAgIGJvcmRlci1yaWdodDogbm9uZTtcXG4gICAgICAgIGJvcmRlci1sZWZ0OiBub25lO1xcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcbiAgICB9XFxuICAgIC5wbGFjZUJ0bkNvbnRhaW5lciA+IGJ1dHRvbiB7XFxuICAgICAgICBmb250LXNpemU6IDE4cHg7XFxuICAgIH1cXG4gICAgLmluc3RydWN0VGl0bGUge1xcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICB9XFxuICAgIC5wbGFjZUluc3RydWN0aW9ucyAuaW5zdHJ1Y3RUZXh0IHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcXG4gICAgfVxcbiAgICAubWFpbkNvbnRhaW5lciB7XFxuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyLCAxZnIpO1xcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XFxuICAgIH1cXG4gICAgLmluaXRpYWxDb250ZW50IHtcXG4gICAgICAgIGdyaWQtYXJlYTogMS8xLzQvMjtcXG4gICAgfVxcbiAgICAubWFpbkNvbnRhaW5lciAuYm9hcmRDb250YWluZXI6Zmlyc3QtY2hpbGQge1xcbiAgICAgICAgZ3JpZC1hcmVhOiAyLzEvMy8yO1xcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcXG4gICAgfVxcbiAgICAubWFpbkNvbnRhaW5lciAuYm9hcmRDb250YWluZXI6bnRoLWNoaWxkKDIpIHtcXG4gICAgICAgIGdyaWQtYXJlYTogMS8xLzIvMjtcXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIH1cXG4gICAgLmxlZ2VuZENvbnRhaW5lciB7XFxuICAgICAgICBkaXNwbGF5OiBub25lO1xcbiAgICAgICAgZ3JpZC1hcmVhOiAxLzEvMy8yO1xcbiAgICAgICAgd2lkdGg6IDQ1MHB4O1xcbiAgICB9XFxufVxcbkBtZWRpYSAobWF4LXdpZHRoOiA1NDlweCkge1xcbiAgICAuaGVhZGVyVGl0bGUge1xcbiAgICAgICAgZm9udC1zaXplOiAzNnB4O1xcbiAgICAgICAgcGFkZGluZzogNXB4IDA7XFxuICAgIH1cXG4gICAgLm1lbnVCdG4ge1xcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xcbiAgICAgICAgd2lkdGg6IDI1cHg7XFxuICAgIH1cXG4gICAgLmluaXRpYWxDb250ZW50IHtcXG4gICAgICAgIHBhZGRpbmc6IDA7XFxuICAgICAgICBnYXA6IDA7XFxuICAgIH1cXG4gICAgLmluc3RydWN0aW9uc0NvbnRhaW5lciB7XFxuICAgICAgICBtaW4td2lkdGg6IDI2MHB4O1xcbiAgICB9XFxuICAgIC5pbnN0cnVjdGlvbnMge1xcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICB9XFxuICAgIC5pbnB1dENvbnRhaW5lciA+IGxhYmVsIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgfVxcbiAgICAuaW5wdXRGaWVsZCB7XFxuICAgICAgICB3aWR0aDogMjAwcHg7XFxuICAgIH1cXG4gICAgLmNvbW1zIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgfVxcbiAgICAucGxhY2VDb250YWluZXIge1xcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcbiAgICB9XFxuICAgIC5wbGFjZUluc3RydWN0aW9ucyB7XFxuICAgICAgICBwYWRkaW5nOiAxdmggMnZ3O1xcbiAgICB9XFxuICAgIC5pbnN0cnVjdFRpdGxlIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgfVxcbiAgICAucGxhY2VJbnN0cnVjdGlvbnMgLmluc3RydWN0VGV4dCB7XFxuICAgICAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIH1cXG4gICAgLmNlbGwge1xcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xcbiAgICAgICAgd2lkdGg6IDI1cHg7XFxuICAgICAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIH1cXG4gICAgLm1haW5Db250YWluZXIge1xcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XFxuICAgIH1cXG4gICAgLmxlZ2VuZENvbnRhaW5lciB7XFxuICAgICAgICB3aWR0aDogOTAlO1xcbiAgICAgICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XFxuICAgIH1cXG4gICAgLm9iamVjdGl2ZUJveCxcXG4gICAgLmluc3RydWN0Qm94LFxcbiAgICAubGVnZW5kQm94IHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgfVxcbiAgICAub2JqZWN0aXZlVGV4dCxcXG4gICAgLmluc3RydWN0VGV4dCxcXG4gICAgLmVtb2ppTGkge1xcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xcbiAgICB9XFxuICAgIC5lbW9qaUJveCB7XFxuICAgICAgICBoZWlnaHQ6IDI1cHg7XFxuICAgICAgICB3aWR0aDogMjVweDtcXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcXG4gICAgfVxcbiAgICAuZW5kQ29udGFpbmVyIHtcXG4gICAgICAgIHBhZGRpbmc6IDA7XFxuICAgICAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcbiAgICAgICAgbWluLWhlaWdodDogMjc1cHg7XFxuICAgIH1cXG4gICAgLmJhbm5lciB7XFxuICAgICAgICBtaW4td2lkdGg6IDI2MHB4O1xcbiAgICAgICAgZm9udC1zaXplOiAzNnB4O1xcbiAgICB9XFxuICAgIC53aW5uZXIge1xcbiAgICAgICAgZm9udC1zaXplOiAyOHB4O1xcbiAgICB9XFxuICAgIC5wbGF5QWdhaW4ge1xcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMHB4O1xcbiAgICAgICAgcGFkZGluZzogMTBweCAzMHB4O1xcbiAgICB9XFxuICAgIC5naXRJY29uLFxcbiAgICAubGlua0ljb24ge1xcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xcbiAgICAgICAgd2lkdGg6IDI1cHg7XFxuICAgIH1cXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLG9CQUFvQjtJQUNwQiwrREFBMkQ7SUFDM0QsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLCtEQUF1RTtJQUN2RSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLHdCQUF3QjtJQUN4QiwrREFBOEU7SUFDOUUsa0JB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SSxlQUFlO0lBQ25CO0lBQ0E7UUFDSSxlQUFlO1FBQ2Ysa0JBQWtCO1FBQ2xCLGtCQUFrQjtJQUN0QjtJQUNBOztRQUVJLFlBQVk7UUFDWixXQUFXO0lBQ2Y7QUFDSlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSdXNzbyc7XFxuICAgIHNyYzogdXJsKCcuL2ZvbnRzL1J1c3NvT25lLVJlZ3VsYXIudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXdlaWdodDogNDAwO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ0dhcic7XFxuICAgIHNyYzogdXJsKCcuL2ZvbnRzL0VCR2FyYW1vbmQtVmFyaWFibGVGb250X3dnaHQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ0dhckl0YWxpYyc7XFxuICAgIHNyYzogdXJsKCcuL2ZvbnRzL0VCR2FyYW1vbmQtSXRhbGljLVZhcmlhYmxlRm9udF93Z2h0LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbn1cXG4qIHtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBmb250LWZhbWlseTogJ0dhcicsIEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XFxufVxcbi5ib2R5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzkwZTBlZjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgbWluLWhlaWdodDogMTAwdmg7XFxuICAgIG1pbi13aWR0aDogMTAwdnc7XFxufVxcbi5oZWFkZXJDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxNiwgMWZyKTtcXG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4uaGVhZGVyVGl0bGUge1xcbiAgICBncmlkLWNvbHVtbjogMi8xNjtcXG4gICAgZm9udC1mYW1pbHk6ICdSdXNzbycsIFRpbWVzLCBHZW9yZ2lhO1xcbiAgICBmb250LXNpemU6IDcwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICAgIHBhZGRpbmc6IDE1cHggMCAwIDA7XFxufVxcbi5tZW51QnRuQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgZ3JpZC1jb2x1bW46IDE2LzE3O1xcbn1cXG4ubWVudUJ0bjpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuLmNvbW1Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5jb21tcyB7XFxuICAgIG1pbi13aWR0aDogODUwcHg7XFxuICAgIHBhZGRpbmc6IDF2aCAzdnc7XFxuICAgIGZvbnQtc2l6ZTogMzJweDtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcbiAgICBjb2xvcjojOTBlMGVmO1xcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcbiAgICBib3JkZXI6IDRweCBzb2xpZCAjOTBlMGVmO1xcbiAgICBvdXRsaW5lOiA0cHggc29saWQgYmxhY2s7XFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxufVxcbi5wbGFjZUNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDJmcjtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcXG59XFxuLnBsYWNlQnRuQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5wbGFjZUJ0bkNvbnRhaW5lciA+IGJ1dHRvbiB7XFxuICAgIGZvbnQtZmFtaWx5OiAnUnVzc28nLCBHZW9yZ2lhLCAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICAgIGhlaWdodDogNDRweDtcXG4gICAgd2lkdGg6IDEyNXB4O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCA1cHggcmdiKDQ1LCAxMDAsIDE3MCk7XFxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDI1MG1zO1xcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XFxufVxcbi5wbGFjZUJ0bkNvbnRhaW5lciA+IGJ1dHRvbjpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDFweCAjMDA3N0I2O1xcbn1cXG4ucGxhY2VCdG5Db250YWluZXIgPiBidXR0b246YWN0aXZlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk4KTtcXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCA1cHggYmxhY2s7XFxufVxcbi5wbGFjZUluc3RydWN0aW9ucyB7XFxuICAgIHBhZGRpbmc6IDJ2aCAydnc7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuLmluc3RydWN0VGl0bGUge1xcbiAgICBmb250LXNpemU6IDI0cHg7XFxufVxcbi5tYWluIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZsZXgtZ3JvdzogMTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjojOTBlMGVmO1xcbn1cXG4ubWFpbkNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogM2ZyIDJmciAzZnI7XFxuICAgIHBhZGRpbmc6IDAgMCAyMHB4IDA7XFxufVxcbi5pbml0aWFsQ29udGVudCB7XFxuICAgIGdyaWQtY29sdW1uOiAyLzM7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmciAxZnI7XFxuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICBwYWRkaW5nOiAyMHB4IDUwcHggNDBweCA1MHB4O1xcbiAgICBib3JkZXI6IDE2cHggZG91YmxlIGJsYWNrO1xcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xcbn1cXG4uaW5zdHJ1Y3Rpb25zQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG1pbi13aWR0aDogMzAwcHg7XFxufVxcbi5pbnN0cnVjdGlvbnMge1xcbiAgICBmb250LXNpemU6IDI4cHg7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG59XFxuLmlucHV0Q29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXG59XFxuLmlucHV0Q29udGFpbmVyID4gbGFiZWwge1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxufVxcbi5pbnB1dEZpZWxkIHtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIG1hcmdpbjogMTBweDtcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbi5pbnB1dEZpZWxkOmZvY3VzIHtcXG4gICAgb3V0bGluZTogbm9uZTtcXG59XFxuLmlucHV0RmllbGQ6Zm9jdXM6OnBsYWNlaG9sZGVyIHtcXG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG4uc3RhcnRDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4uc3RhcnQge1xcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBib3JkZXI6IDRweCBzb2xpZCBibGFjaztcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgZm9udC1mYW1pbHk6ICdSdXNzbycsIEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XFxuICAgIGZvbnQtc2l6ZTogMjRweDtcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMzAwbXM7XFxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDVweCAjOTBlMGVmO1xcbn1cXG4uc3RhcnQ6aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJveC1zaGFkb3c6IDAgMCA1cHggIzAwNzdCNjtcXG59XFxuLnN0YXJ0OmFjdGl2ZSB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OCk7XFxuICAgIGJveC1zaGFkb3c6IDJweCAycHggNXB4IGJsYWNrO1xcbn1cXG4uZGlzcGxheUJvYXJkIHtcXG4gICAgZ3JpZC1hcmVhOiAxLzIvNC8zO1xcbiAgICBtYXgtaGVpZ2h0OiA0MThweDtcXG4gICAgbWF4LXdpZHRoOiA0MThweDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTAsIDFmcik7XFxuICAgIGdhcDogMnB4O1xcbiAgICBtYXJnaW46IDAgYXV0bztcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgYm9yZGVyOiA1cHggc29saWQgIHdoaXRlO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgNDBweCByZ2IoMzUsIDEwMCwgMTcwKTtcXG59XFxuLm1haW5Db250YWluZXIgLmJvYXJkQ29udGFpbmVyOm50aC1jaGlsZCgyKSB7XFxuICAgIGdyaWQtY29sdW1uOiAzLzQ7XFxufVxcbi5sZWdlbmRDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAyZnIgNGZyO1xcbiAgICBncmlkLWFyZWE6IDEvMi8yLzM7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAxMHB4IHJnYig0NSwgMTAwLCAxNzApO1xcbn1cXG4ubGVnZW5kQm94IHtcXG4gICAgZ3JpZC1yb3c6IDMvNDtcXG59XFxuLm9iamVjdGl2ZUJveCB7XFxuICAgIGdyaWQtcm93OiAxLzI7XFxufVxcbi5pbnN0cnVjdEJveCB7XFxuICAgIGdyaWQtcm93OiAyLzM7XFxufVxcbi5sZWdlbmRCb3gsXFxuLm9iamVjdGl2ZUJveCxcXG4uaW5zdHJ1Y3RCb3gge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbi5ib2FyZExhYmVsIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSdXNzbycsIEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XFxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcXG4gICAgY29sb3I6IHJnYigzNSwgMTAwLCAxNzApO1xcbiAgICB0ZXh0LXNoYWRvdzogMC4ycHggMC4ycHggYmxhY2s7XFxufVxcbi5jb2wge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBnYXA6IDJweDtcXG59XFxuLmNlbGwge1xcbiAgICBoZWlnaHQ6IDQwcHg7XFxuICAgIHdpZHRoOiA0MHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogMzJweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG4uc2hpcCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c2xhdGVncmF5O1xcbn1cXG4uaGl0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwOCwgMCwgMCk7XFxufVxcbi5taXNzIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDM1LCAxMDAsIDE3MCk7XFxufVxcbi5zdW5rIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwOCwgMCwgMCk7XFxufVxcbi5sZWdlbmRDb250YWluZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG59XFxuLmxlZ2VuZEJveCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4uZW1vamlMaSB7XFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG1hcmdpbjogNHB4O1xcbn1cXG4uZW1vamlCb3gge1xcbiAgICBoZWlnaHQ6IDQwcHg7XFxuICAgIHdpZHRoOiA0MHB4O1xcbiAgICBmb250LXNpemU6IDMycHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG4ubGVnZW5kQm94LFxcbi5vYmplY3RpdmVCb3gsIFxcbi5pbnN0cnVjdEJveCB7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbiAgICBjb2xvcjogIzAwNzdCNjtcXG59XFxuLmVtb2ppTGksXFxuLm9iamVjdGl2ZVRleHQsXFxuLmluc3RydWN0VGV4dCB7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XFxufVxcbi5pbnN0cnVjdFRleHQge1xcbiAgICBwYWRkaW5nOiAwIDhweDtcXG59XFxuLmVuZENvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7XFxuICAgIHBhZGRpbmc6IDUwcHg7XFxuICAgIGJvcmRlcjogMTZweCBkb3VibGUgYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XFxufVxcbi5iYW5uZXIge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogNTBweDtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuLndpbm5lciB7XFxuICAgIGZvbnQtc2l6ZTogMzhweDtcXG59XFxuLnBsYXlBZ2FpbiB7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGJvcmRlcjogNHB4IHNvbGlkIGJsYWNrO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBmb250LXNpemU6IDM4cHg7XFxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgM3B4IGJsYWNrO1xcbn1cXG4ucGxheUFnYWluOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBib3gtc2hhZG93OiAwIDAgM3B4IGJsYWNrO1xcbn1cXG4ucGxheUFnYWluOmFjdGl2ZSB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OCk7XFxuICAgIGJveC1zaGFkb3c6IDJweCAycHggNXB4IGJsYWNrO1xcbn1cXG4uZm9vdGVyQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcbi5mb290ZXJCb3gge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnI7XFxufVxcbi5saW5rQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcbi5naXRJY29uLFxcbi5saW5rSWNvbiB7XFxuICAgIGhlaWdodDogNDBweDtcXG59XFxuLmxpbmtDb250YWluZXIgPiBhID4gaW1nIHtcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XFxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcXG59XFxuLmxpbmtDb250YWluZXIgPiBhID4gaW1nOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGVaKDM2MGRlZyk7XFxufVxcbkBtZWRpYSAobWluLXdpZHRoOiA5NTBweCkgYW5kIChtYXgtd2lkdGg6IDEzNTBweCkge1xcbiAgICAuaW5pdGlhbENvbnRlbnQge1xcbiAgICAgICAgZ3JpZC1hcmVhOiAxLzMvMy80O1xcbiAgICB9XFxuICAgIC5jb21tcyB7XFxuICAgICAgICBtaW4td2lkdGg6IDc1MHB4O1xcbiAgICB9XFxuICAgIC5tYWluQ29udGFpbmVyIHtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDE4ZnIgMC41ZnIgMThmciAxZnI7XFxuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDJmciAxZnI7XFxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICAgICAgd2lkdGg6IDEwMHZ3O1xcbiAgICB9XFxuICAgIC5tYWluQ29udGFpbmVyIC5ib2FyZENvbnRhaW5lcjpmaXJzdC1jaGlsZCB7XFxuICAgICAgICBncmlkLWFyZWE6IDEvMi8yLzM7XFxuICAgIH1cXG4gICAgLm1haW5Db250YWluZXIgLmJvYXJkQ29udGFpbmVyOm50aC1jaGlsZCgyKSB7XFxuICAgICAgICBncmlkLWFyZWE6IDEvNC8yLzU7XFxuICAgIH1cXG4gICAgLmRpc3BsYXlCb2FyZCB7XFxuICAgICAgICBncmlkLWFyZWE6IDEvMy8zLzQ7XFxuICAgIH1cXG4gICAgLmxlZ2VuZENvbnRhaW5lciB7XFxuICAgICAgICBncmlkLWFyZWE6IDIvMi8zLy0yO1xcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmciAxZnI7XFxuICAgICAgICBoZWlnaHQ6IDIyMHB4O1xcbiAgICAgICAgd2lkdGg6IDc1MHB4O1xcbiAgICAgICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICAgIH1cXG4gICAgLmxlZ2VuZEJveCB7XFxuICAgICAgICBncmlkLWFyZWE6IDEvMi80LzM7XFxuICAgIH1cXG4gICAgLmluc3RydWN0Qm94IHtcXG4gICAgICAgIGdyaWQtcm93OiAyLzQ7XFxuICAgIH1cXG4gICAgLmVtb2ppQm94IHtcXG4gICAgICAgIGhlaWdodDogMzZweDtcXG4gICAgICAgIHdpZHRoOiAzNnB4O1xcbiAgICAgICAgZm9udC1zaXplOiAyOHB4O1xcbiAgICB9XFxufVxcbkBtZWRpYSAobWF4LXdpZHRoOiA5NTBweCkge1xcbiAgICAubWVudUJ0biB7XFxuICAgICAgICBoZWlnaHQ6IDQwcHg7XFxuICAgICAgICB3aWR0aDogNDBweDtcXG4gICAgfVxcbiAgICAuY29tbXMge1xcbiAgICAgICAgbWluLXdpZHRoOiAwO1xcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxuICAgICAgICBwYWRkaW5nOiAxdmggMDtcXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XFxuICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XFxuICAgICAgICBib3JkZXItbGVmdDogbm9uZTtcXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcXG4gICAgfVxcbiAgICAucGxhY2VCdG5Db250YWluZXIgPiBidXR0b24ge1xcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xcbiAgICB9XFxuICAgIC5pbnN0cnVjdFRpdGxlIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcXG4gICAgfVxcbiAgICAucGxhY2VJbnN0cnVjdGlvbnMgLmluc3RydWN0VGV4dCB7XFxuICAgICAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIH1cXG4gICAgLm1haW5Db250YWluZXIge1xcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMiwgMWZyKTtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xcbiAgICB9XFxuICAgIC5pbml0aWFsQ29udGVudCB7XFxuICAgICAgICBncmlkLWFyZWE6IDEvMS80LzI7XFxuICAgIH1cXG4gICAgLm1haW5Db250YWluZXIgLmJvYXJkQ29udGFpbmVyOmZpcnN0LWNoaWxkIHtcXG4gICAgICAgIGdyaWQtYXJlYTogMi8xLzMvMjtcXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIH1cXG4gICAgLm1haW5Db250YWluZXIgLmJvYXJkQ29udGFpbmVyOm50aC1jaGlsZCgyKSB7XFxuICAgICAgICBncmlkLWFyZWE6IDEvMS8yLzI7XFxuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xcbiAgICB9XFxuICAgIC5sZWdlbmRDb250YWluZXIge1xcbiAgICAgICAgZGlzcGxheTogbm9uZTtcXG4gICAgICAgIGdyaWQtYXJlYTogMS8xLzMvMjtcXG4gICAgICAgIHdpZHRoOiA0NTBweDtcXG4gICAgfVxcbn1cXG5AbWVkaWEgKG1heC13aWR0aDogNTQ5cHgpIHtcXG4gICAgLmhlYWRlclRpdGxlIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMzZweDtcXG4gICAgICAgIHBhZGRpbmc6IDVweCAwO1xcbiAgICB9XFxuICAgIC5tZW51QnRuIHtcXG4gICAgICAgIGhlaWdodDogMjVweDtcXG4gICAgICAgIHdpZHRoOiAyNXB4O1xcbiAgICB9XFxuICAgIC5pbml0aWFsQ29udGVudCB7XFxuICAgICAgICBwYWRkaW5nOiAwO1xcbiAgICAgICAgZ2FwOiAwO1xcbiAgICB9XFxuICAgIC5pbnN0cnVjdGlvbnNDb250YWluZXIge1xcbiAgICAgICAgbWluLXdpZHRoOiAyNjBweDtcXG4gICAgfVxcbiAgICAuaW5zdHJ1Y3Rpb25zIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcXG4gICAgfVxcbiAgICAuaW5wdXRDb250YWluZXIgPiBsYWJlbCB7XFxuICAgICAgICBmb250LXNpemU6IDE2cHg7XFxuICAgIH1cXG4gICAgLmlucHV0RmllbGQge1xcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xcbiAgICB9XFxuICAgIC5jb21tcyB7XFxuICAgICAgICBmb250LXNpemU6IDE2cHg7XFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIH1cXG4gICAgLnBsYWNlQ29udGFpbmVyIHtcXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcXG4gICAgfVxcbiAgICAucGxhY2VJbnN0cnVjdGlvbnMge1xcbiAgICAgICAgcGFkZGluZzogMXZoIDJ2dztcXG4gICAgfVxcbiAgICAuaW5zdHJ1Y3RUaXRsZSB7XFxuICAgICAgICBmb250LXNpemU6IDE2cHg7XFxuICAgIH1cXG4gICAgLnBsYWNlSW5zdHJ1Y3Rpb25zIC5pbnN0cnVjdFRleHQge1xcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xcbiAgICB9XFxuICAgIC5jZWxsIHtcXG4gICAgICAgIGhlaWdodDogMjVweDtcXG4gICAgICAgIHdpZHRoOiAyNXB4O1xcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICB9XFxuICAgIC5tYWluQ29udGFpbmVyIHtcXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcbiAgICB9XFxuICAgIC5sZWdlbmRDb250YWluZXIge1xcbiAgICAgICAgd2lkdGg6IDkwJTtcXG4gICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xcbiAgICB9XFxuICAgIC5vYmplY3RpdmVCb3gsXFxuICAgIC5pbnN0cnVjdEJveCxcXG4gICAgLmxlZ2VuZEJveCB7XFxuICAgICAgICBmb250LXNpemU6IDE2cHg7XFxuICAgIH1cXG4gICAgLm9iamVjdGl2ZVRleHQsXFxuICAgIC5pbnN0cnVjdFRleHQsXFxuICAgIC5lbW9qaUxpIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcXG4gICAgfVxcbiAgICAuZW1vamlCb3gge1xcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xcbiAgICAgICAgd2lkdGg6IDI1cHg7XFxuICAgICAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIH1cXG4gICAgLmVuZENvbnRhaW5lciB7XFxuICAgICAgICBwYWRkaW5nOiAwO1xcbiAgICAgICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXG4gICAgICAgIG1pbi1oZWlnaHQ6IDI3NXB4O1xcbiAgICB9XFxuICAgIC5iYW5uZXIge1xcbiAgICAgICAgbWluLXdpZHRoOiAyNjBweDtcXG4gICAgICAgIGZvbnQtc2l6ZTogMzZweDtcXG4gICAgfVxcbiAgICAud2lubmVyIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcXG4gICAgfVxcbiAgICAucGxheUFnYWluIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDBweDtcXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMzBweDtcXG4gICAgfVxcbiAgICAuZ2l0SWNvbixcXG4gICAgLmxpbmtJY29uIHtcXG4gICAgICAgIGhlaWdodDogMjVweDtcXG4gICAgICAgIHdpZHRoOiAyNXB4O1xcbiAgICB9XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG5cblxuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBib2FyZCBsb2dpY1xuXG5jb25zdCBCb2FyZEZhY3RvcnkgPSAoKSA9PiB7XG4gIGNvbnN0IGJvYXJkID0gW107XG4gIGNvbnN0IGNyZWF0ZSA9IChsZW5ndGgpID0+IHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXQgcm93ID0gW107XG4gICAgICBib2FyZC5wdXNoKHJvdyk7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGxlbmd0aDsgaisrKSB7XG4gICAgICAgIHJvdy5wdXNoKDApO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYm9hcmQ7XG4gIH07XG4gIGNvbnN0IHNoaXBBcnJheSA9IFtdO1xuICBjb25zdCBwbGFjZVNoaXAgPSAob2JqZWN0LCBheGlzLCB4LCB5KSA9PiB7XG4gICAgaWYgKFxuICAgICAgY2hlY2tPbkJvYXJkKG9iamVjdC5sZW5ndGgsIGF4aXMsIHgsIHkpIHx8XG4gICAgICBjaGVja1BsYWNlKG9iamVjdC5sZW5ndGgsIGF4aXMsIHgsIHkpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChheGlzKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9iamVjdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBib2FyZFt4ICsgaV1beV0gPSBvYmplY3QubWFya2VyO1xuICAgICAgICBvYmplY3QuY29vcmRzLnB1c2goW3ggKyBpLCB5XSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb2JqZWN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGJvYXJkW3hdW3kgKyBpXSA9IG9iamVjdC5tYXJrZXI7XG4gICAgICAgIG9iamVjdC5jb29yZHMucHVzaChbeCwgeSArIGldKTtcbiAgICAgIH1cbiAgICB9XG4gICAgc2hpcEFycmF5LnB1c2gob2JqZWN0KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcbiAgY29uc3QgY2hlY2tQbGFjZSA9IChsZW5ndGgsIGF4aXMsIHgsIHkpID0+IHtcbiAgICBsZXQgYXJyYXkgPSBbXTtcbiAgICBsZXQgdmFsdWU7XG4gICAgaWYgKGF4aXMpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYXJyYXkucHVzaChib2FyZFt4ICsgaV1beV0gPiAwKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICBhcnJheS5wdXNoKGJvYXJkW3hdW3kgKyBpXSA+IDApO1xuICAgICAgfVxuICAgIH1cbiAgICB2YWx1ZSA9IGFycmF5LmZpbmQoKGluZGV4KSA9PiB7XG4gICAgICByZXR1cm4gaW5kZXggPT0gdHJ1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH07XG4gIGNvbnN0IGNoZWNrTWlzcyA9IChsZW5ndGgsIGF4aXMsIHgsIHkpID0+IHtcbiAgICBsZXQgYXJyYXkgPSBbXTtcbiAgICBsZXQgdmFsdWU7XG4gICAgaWYgKGF4aXMpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYXJyYXkucHVzaChib2FyZFt4ICsgaV1beV0gPT0gLTEpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGFycmF5LnB1c2goYm9hcmRbeF1beSArIGldID09IC0xKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdmFsdWUgPSBhcnJheS5maW5kKChpbmRleCkgPT4ge1xuICAgICAgcmV0dXJuIGluZGV4ID09IHRydWU7XG4gICAgfSk7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9O1xuICBjb25zdCBjaGVja1Byb2IgPSAobGVuZ3RoLCBheGlzLCB4LCB5LCBoaXRDb29yZEFycmF5KSA9PiB7XG4gICAgbGV0IHdlaWdodCA9IDE7XG4gICAgY29uc3Qgc2hpcENvb3JkcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChheGlzKSB7XG4gICAgICAgIHNoaXBDb29yZHMucHVzaChbTnVtYmVyKHgpICsgaSwgeV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2hpcENvb3Jkcy5wdXNoKFt4LCBOdW1iZXIoeSkgKyBpXSk7XG4gICAgICB9XG4gICAgfVxuICAgIGhpdENvb3JkQXJyYXkuZm9yRWFjaCgoY29vcmQpID0+IHtcbiAgICAgIC8vIG5lZWQgdG8gY29tcGFyZSBzaGlwQ29vcmRpbmF0ZXMgd2l0aCBoaXRDb29yZGluYXRlc0FycmF5XG4gICAgICAvLyBpZiB5ZXMsIGluY3JlYXNlIHdlaWdodCB4IDUwXG4gICAgICAvLyBpZiBubywgbm9ybWFsIHdlaWdodCBmb3IgY2VsbCBjb3VudGVyIGZvciBwcm9iTWFwXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXBDb29yZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGNvb3JkWzBdID09IHNoaXBDb29yZHNbaV1bMF0pIHtcbiAgICAgICAgICBpZiAoY29vcmRbMV0gPT0gc2hpcENvb3Jkc1tpXVsxXSkge1xuICAgICAgICAgICAgd2VpZ2h0ICo9IDUwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiB3ZWlnaHQ7XG4gIH07XG4gIGNvbnN0IGNoZWNrT25Cb2FyZCA9IChsZW5ndGgsIGF4aXMsIHgsIHkpID0+IHtcbiAgICBsZXQgdmFsdWU7XG4gICAgaWYgKGF4aXMpIHtcbiAgICAgIHZhbHVlID0geCArIGxlbmd0aDtcbiAgICAgIHJldHVybiB2YWx1ZSA+IGJvYXJkLmxlbmd0aDtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgPSB5ICsgbGVuZ3RoO1xuICAgICAgcmV0dXJuIHZhbHVlID4gYm9hcmRbeF0ubGVuZ3RoO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgd2hpY2hTaGlwID0gKGlucHV0KSA9PiB7XG4gICAgcmV0dXJuIHNoaXBBcnJheS5maW5kKChpbmRleCkgPT4gaW5kZXgubWFya2VyID09PSBpbnB1dCk7XG4gIH07XG4gIGNvbnN0IGFsbFN1bmsgPSAoKSA9PiBzaGlwQXJyYXkuZXZlcnkoKGluZGV4KSA9PiBpbmRleC5pc1N1bmsoKSA9PT0gdHJ1ZSk7XG4gIGNvbnN0IG1pc3NlZEF0dGFja3MgPSBbXTtcbiAgY29uc3QgX2FkZE1pc3MgPSAoeCwgeSkgPT4gbWlzc2VkQXR0YWNrcy5wdXNoKFt4LCB5XSk7XG4gIGNvbnN0IF91cGRhdGVCb2FyZCA9ICh4LCB5LCB2YWx1ZSkgPT4gKGJvYXJkW3hdW3ldID0gdmFsdWUpO1xuICBjb25zdCBfdXBkYXRlTWlzcyA9ICh4LCB5KSA9PiB7XG4gICAgX2FkZE1pc3MoeCwgeSk7XG4gICAgX3VwZGF0ZUJvYXJkKHgsIHksIC0xKTtcbiAgfTtcbiAgY29uc3QgX3VwZGF0ZUhpdCA9ICh4LCB5KSA9PiB7XG4gICAgY29uc3QgdGhlU2hpcCA9IHdoaWNoU2hpcChib2FyZFt4XVt5XSk7XG4gICAgY29uc3Qgc3VuayA9IHRoZVNoaXAuaGl0UGx1cygpO1xuICAgIF91cGRhdGVCb2FyZCh4LCB5LCBib2FyZFt4XVt5XSArIDEwKTtcbiAgICByZXR1cm4gc3VuaztcbiAgfTtcbiAgY29uc3QgX2NoZWNrQXR0YWNrID0gKHgsIHkpID0+IHtcbiAgICBpZiAoYm9hcmRbeF1beV0gPiAxMCB8fCBib2FyZFt4XVt5XSA9PSAtMSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcbiAgY29uc3QgX2xhdW5jaEF0dGFjayA9ICh4LCB5LCBvYmopID0+IHtcbiAgICBvYmoudmFsdWUgPSBib2FyZFt4XVt5XTtcbiAgICBpZiAob2JqLnZhbHVlID4gMCkge1xuICAgICAgLy8gaWYgYSBoaXQ6XG4gICAgICAvLyAtPiBjaGVjayB3aGljaCBzaGlwIGl0IGlzLCBhZGQgaGl0ICh0byBib2FyZCAmIHRvIGRpc3BsYXkpXG4gICAgICAvLyAtPiBzZWUgaWYgaXQgc3VuayBhbmQgdXBkYXRlIGFjY29yZGluZ2x5XG4gICAgICAvLyAtPiBjaGFuZ2UgcmV0dXJuIGZyb20gdmFsdWUgdG8gdHJ1ZVxuICAgICAgY29uc3Qgc3VuayA9IF91cGRhdGVIaXQoeCwgeSk7XG4gICAgICBpZiAoc3Vuaykge1xuICAgICAgICBvYmouc3VuayA9IHRydWU7XG4gICAgICAgIGlmIChhbGxTdW5rKCkpIHtcbiAgICAgICAgICBvYmouYWxsU3VuayA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG9iai5zaGlwID0gb2JqLnZhbHVlO1xuICAgICAgb2JqLnZhbHVlID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gYWthIGEgbWlzczpcbiAgICAgIC8vIC0+IHVwZGF0ZSBnYW1lYm9hcmQgdy8gLTEgKGZvciBtaXNzKVxuICAgICAgLy8gLT4gdXBkYXRlIGRpc3BsYXlcbiAgICAgIF91cGRhdGVNaXNzKHgsIHkpO1xuICAgICAgb2JqLnZhbHVlID0gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG4gIH07XG4gIGNvbnN0IHJlY2VpdmVBdHRhY2sgPSAoeCwgeSkgPT4ge1xuICAgIGNvbnN0IG9iaiA9IHtcbiAgICAgIHN1bms6IGZhbHNlLFxuICAgICAgYWxsU3VuazogZmFsc2UsXG4gICAgfTtcbiAgICBpZiAoX2NoZWNrQXR0YWNrKHgsIHkpKSB7XG4gICAgICByZXR1cm4gX2xhdW5jaEF0dGFjayh4LCB5LCBvYmopO1xuICAgIH1cbiAgICAvLyBlbHNlLCB1c2VyIHNlbGVjdGVkIGluZWxpZ2libGUgY29vcmRpbmF0ZXNcbiAgICAvLyBhbmQgbmV3IGNvb3JkaW5hdGVzIG5lZWRlZFxuICAgIG9iai52YWx1ZSA9IDA7XG4gICAgcmV0dXJuIG9iajtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBib2FyZCxcbiAgICBjcmVhdGUsXG4gICAgcGxhY2VTaGlwLFxuICAgIGNoZWNrUGxhY2UsXG4gICAgY2hlY2tNaXNzLFxuICAgIGNoZWNrUHJvYixcbiAgICBjaGVja09uQm9hcmQsXG4gICAgd2hpY2hTaGlwLFxuICAgIHJlY2VpdmVBdHRhY2ssXG4gICAgYWxsU3VuayxcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkRmFjdG9yeTtcbiIsImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIGNsZWFyRGl2IH0gZnJvbSBcIi4vdXRpbGl0eVwiO1xuaW1wb3J0IHsgbWFrZUluaXRpYWxMaXRlIH0gZnJvbSBcIi4vaW5pdGlhbERPTVwiO1xuXG4vLyBidWlsZCBjb21tdW5pY2F0aW9uIGRpdiAtIGZvciBkaXNwbGF5aW5nIHVwZGF0ZXMgLyBwcm9tcHRzXG5jb25zdCBjb20gPSAoKCkgPT4ge1xuICBjb25zdCBjb21tQyA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJjb21tQ29udGFpbmVyXCIgfSk7XG5cbiAgY29uc3QgYnVpbGRDb21tcyA9ICgpID0+IHtcbiAgICBjb25zdCBjb21tcyA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJjb21tc1wiIH0pO1xuICAgIGNvbW1zLnRleHRDb250ZW50ID0gYGA7XG4gICAgY29tbXMuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIGNvbW1DLmFwcGVuZENoaWxkKGNvbW1zKTtcbiAgICByZXR1cm4gY29tbUM7XG4gIH07XG4gIGNvbnN0IGNsZWFyID0gKCkgPT4ge1xuICAgIGNvbW1DLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIGNvbW1DLnJlbW92ZUNoaWxkKGNvbW1DLmxhc3RDaGlsZCk7XG4gIH07XG4gIGNvbnN0IGluc3RydWN0ID0gKHBsYXllciwgc2hpcCkgPT4ge1xuICAgIGNvbnN0IGNvbW1zID0gY29tbUMuZmlyc3RDaGlsZDtcbiAgICBjb21tcy50ZXh0Q29udGVudCA9IGAke3BsYXllci5jb2RlbmFtZX06IFBsYWNlIHlvdXIgJHtzaGlwfS5gO1xuICB9O1xuICBjb25zdCBtZXNzYWdlID0gKHBsYXllciwgY29udGVudCkgPT4ge1xuICAgIGNvbW1DLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQgPSBgJHtwbGF5ZXIuY29kZW5hbWV9OiAke2NvbnRlbnR9YDtcbiAgfTtcbiAgY29uc3Qgc2hpcEFycmF5ID0gW1xuICAgIFwiZW1wdHlcIixcbiAgICBcInN1Ym1hcmluZVwiLFxuICAgIFwicGF0cm9sIGJvYXRcIixcbiAgICBcImNydWlzZXJcIixcbiAgICBcImRlc3Ryb3llclwiLFxuICAgIFwiYmF0dGxlIGNhcnJpZXJcIixcbiAgXTtcbiAgY29uc3QgcHJvbm91bkFycmF5ID0gW1xuICAgIHsgMDogXCJ5b3VcIiwgMTogXCJ0aGVpclwiIH0sXG4gICAgeyAwOiBcInRoZXlcIiwgMTogXCJ5b3VyXCIgfSxcbiAgXTtcbiAgY29uc3QgdXBkYXRlVGV4dCA9IChwbGF5ZXJOYW1lLCBib29sZWFuLCBoaXQsIHN1bmssIHNoaXAsIHBsYXllcikgPT4ge1xuICAgIGxldCB2YWx1ZSA9IHBsYXllciA/IHByb25vdW5BcnJheVswXSA6IHByb25vdW5BcnJheVsxXTtcbiAgICBpZiAoYm9vbGVhbikge1xuICAgICAgY29tbUMuZmlyc3RDaGlsZC50ZXh0Q29udGVudCA9IGBBdHRlbnRpb24gJHtwbGF5ZXJOYW1lLmNvZGVuYW1lfTogRXJyb3IhIE11c3Qgc2VsZWN0IG5ldyBjb29yZGluYXRlcy5gO1xuICAgIH0gZWxzZSBpZiAoc3VuayA9PT0gdHJ1ZSkge1xuICAgICAgY29tbUMuZmlyc3RDaGlsZC50ZXh0Q29udGVudCA9IGAke3BsYXllck5hbWUuY29kZW5hbWV9IGZpcmVzIGEgc2hvdCBhbmQgJHt2YWx1ZVswXX0gc3VuayAke3ZhbHVlWzFdfSAke3NoaXBBcnJheVtzaGlwXX0hYDtcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IHN0cmlrZSA9IGhpdCA/IGBsYW5kcyBhIHN0cmlrZSFgIDogYG1pc3NlcyFgO1xuICAgICAgY29tbUMuZmlyc3RDaGlsZC50ZXh0Q29udGVudCA9IGAke3BsYXllck5hbWUuY29kZW5hbWV9IGF0dGFja3MgYW5kICR7c3RyaWtlfWA7XG4gICAgfVxuICB9O1xuICBjb25zdCBlbmRHYW1lID0gKHBsYXllcikgPT4ge1xuICAgIGNvbnN0IG1haW5DID0gY29tbUMubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgIC8vIGNsZWFyIGNvbW1zIGFuZCBtYWluXG4gICAgY2xlYXJEaXYoY29tbUMpO1xuICAgIGNsZWFyRGl2KG1haW5DKTtcbiAgICAvLyBidWlsZCAnZ2FtZSBvdmVyJyBjb250ZW50XG4gICAgY29uc3QgZW5kQyA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJlbmRDb250YWluZXJcIiB9KTtcbiAgICBjb25zdCBiYW5uZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwiYmFubmVyXCIgfSk7XG4gICAgYmFubmVyLnRleHRDb250ZW50ID0gXCJHYW1lIE92ZXIhXCI7XG4gICAgY29uc3Qgd2lubmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzOiBcIndpbm5lclwiIH0pO1xuICAgIHdpbm5lci50ZXh0Q29udGVudCA9IGBXaW5uZXI6ICR7cGxheWVyLmNvZGVuYW1lfWA7XG4gICAgY29uc3QgcGxheUFnYWluID0gY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7IGNsYXNzOiBcInBsYXlBZ2FpblwiIH0pO1xuICAgIHBsYXlBZ2Fpbi50ZXh0Q29udGVudCA9IGBQbGF5IEFnYWluYDtcbiAgICBtYWluQy5hcHBlbmRDaGlsZChlbmRDKTtcbiAgICBlbmRDLmFwcGVuZENoaWxkKGJhbm5lcik7XG4gICAgZW5kQy5hcHBlbmRDaGlsZCh3aW5uZXIpO1xuICAgIGVuZEMuYXBwZW5kQ2hpbGQocGxheUFnYWluKTtcblxuICAgIC8vIGFkZCBsaXN0ZW5lclxuICAgIHBsYXlBZ2Fpbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgLy8gY2xlYXIgY29udGVudFxuICAgICAgbWFpbkMucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChtYWluQyk7XG4gICAgICBjb21tQy5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKGNvbW1DKTtcbiAgICAgIG1ha2VJbml0aWFsTGl0ZSgpO1xuICAgIH0pO1xuICAgIC8vIGhpZGUgaW5mbyBidXR0b25cbiAgICBtYWluQy5wYXJlbnRFbGVtZW50LmNoaWxkcmVuWzBdLmxhc3RDaGlsZC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIH07XG4gIHJldHVybiB7IGJ1aWxkQ29tbXMsIGNsZWFyLCBpbnN0cnVjdCwgbWVzc2FnZSwgdXBkYXRlVGV4dCwgZW5kR2FtZSB9O1xufSkoKTtcblxuZXhwb3J0IHsgY29tIH07XG4iLCJpbXBvcnQgQm9hcmRGYWN0b3J5IGZyb20gXCIuL2JvYXJkXCI7XG4vLyBwbGF5ZXIgZmFjdG9yeSBhbmQgQUkgbG9naWNcbmNvbnN0IFBsYXllckZhY3RvcnkgPSAoY29kZW5hbWUpID0+IHtcbiAgbGV0IHdpbnMgPSAwO1xuICBjb25zdCBhdHRhY2sgPSAoY29vcmRpbmF0ZXMsIGdhbWVib2FyZCkgPT4ge1xuICAgIHJldHVybiBnYW1lYm9hcmQucmVjZWl2ZUF0dGFjayhjb29yZGluYXRlc1swXSwgY29vcmRpbmF0ZXNbMV0pO1xuICB9O1xuICBjb25zdCBhZGRXaW4gPSAoKSA9PiAod2lucyArPSAxKTtcbiAgcmV0dXJuIHsgY29kZW5hbWUsIHdpbnMsIGF0dGFjaywgYWRkV2luIH07XG59O1xuY29uc3QgY29tcHV0ZXIgPSAoKSA9PiB7XG4gIGNvbnN0IGFpID0gUGxheWVyRmFjdG9yeShcIlRoZSBLcmFrZW5cIik7XG4gIGNvbnN0IG5ld1Byb2IgPSAoKSA9PiB7XG4gICAgY29uc3QgcHJvYiA9IEJvYXJkRmFjdG9yeSgpO1xuICAgIHByb2IuY3JlYXRlKDEwKTtcbiAgICByZXR1cm4gcHJvYjtcbiAgfTtcbiAgY29uc3Qgc2hvdCA9IEJvYXJkRmFjdG9yeSgpO1xuICBzaG90LmNyZWF0ZSgxMCk7XG4gIGNvbnN0IF9nZW5lcmF0ZSA9ICgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTtcbiAgY29uc3QgX2dlbmVyYXRlUmFuZG9tQXR0YWNrID0gKCkgPT4ge1xuICAgIGxldCB4ID0gX2dlbmVyYXRlKCk7XG4gICAgbGV0IHkgPSBfZ2VuZXJhdGUoKTtcbiAgICByZXR1cm4gW3gsIHldO1xuICB9O1xuICBjb25zdCBhdHRhY2tzQXJyYXkgPSBbXTtcbiAgY29uc3QgX2F2YWlsYWJsZSA9IChhcnJheSkgPT4ge1xuICAgIGxldCB2YWx1ZSA9IHRydWU7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdHRhY2tzQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChhdHRhY2tzQXJyYXlbaV1bMF0gPT09IGFycmF5WzBdKSB7XG4gICAgICAgIGlmIChhdHRhY2tzQXJyYXlbaV1bMV0gPT09IGFycmF5WzFdKSB7XG4gICAgICAgICAgdmFsdWUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG4gIH07XG4gIGNvbnN0IF9nZW5lcmF0ZUNvb3JkID0gKCkgPT4ge1xuICAgIGxldCBjb29yZCA9IF9nZW5lcmF0ZVJhbmRvbUF0dGFjaygpO1xuICAgIHdoaWxlICghX2F2YWlsYWJsZShjb29yZCkpIHtcbiAgICAgIGNvb3JkID0gX2dlbmVyYXRlUmFuZG9tQXR0YWNrKCk7XG4gICAgfVxuICAgIHJldHVybiBjb29yZDtcbiAgfTtcbiAgY29uc3QgcmFuZG9tQXR0YWNrID0gKGdhbWVib2FyZCkgPT4ge1xuICAgIGNvbnN0IGNvb3JkID0gX2dlbmVyYXRlQ29vcmQoKTtcbiAgICAvLyBhZGQgY29vcmRpbmF0ZXMgdG8gYXR0YWNrc0FycmF5XG4gICAgLy8gbGF1bmNoIGF0dGFjayBvbiBvcHBvc2l0aW9uJ3MgYm9hcmRcbiAgICBhdHRhY2tzQXJyYXkucHVzaChjb29yZCk7XG4gICAgY29uc3Qgb2JqID0ge307XG4gICAgb2JqLmNvb3JkID0gY29vcmQ7XG4gICAgb2JqLm9iaiA9IGdhbWVib2FyZC5yZWNlaXZlQXR0YWNrKGNvb3JkWzBdLCBjb29yZFsxXSk7XG4gICAgcmV0dXJuIG9iajtcbiAgfTtcbiAgY29uc3QgX3JhbmRvbUF4aXMgPSAoKSA9PiB7XG4gICAgY29uc3QgYXhpcyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpO1xuICAgIGlmIChheGlzID09IDApIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG4gIGNvbnN0IHBsYWNlRmxlZXQgPSAocGxheWVyKSA9PiB7XG4gICAgLy8gZm9yIGVhY2ggc2hpcCwgcmFuZG9tbHkgZ2VuZXJhdGUgY29vcmRpbmF0ZXMgYW5kIGF4aXNcbiAgICBjb25zdCBmbGVldEtleXMgPSBPYmplY3Qua2V5cyhwbGF5ZXIuZmxlZXQpO1xuICAgIGZsZWV0S2V5cy5mb3JFYWNoKChzaGlwKSA9PiB7XG4gICAgICBsZXQgYXhpcyA9IF9yYW5kb21BeGlzKCk7XG4gICAgICBsZXQgY29vcmQgPSBfZ2VuZXJhdGVSYW5kb21BdHRhY2soKTtcbiAgICAgIHdoaWxlIChcbiAgICAgICAgIXBsYXllci5nYi5wbGFjZVNoaXAocGxheWVyLmZsZWV0W3NoaXBdLCBheGlzLCBjb29yZFswXSwgY29vcmRbMV0pXG4gICAgICApIHtcbiAgICAgICAgYXhpcyA9IF9yYW5kb21BeGlzKCk7XG4gICAgICAgIGNvb3JkID0gX2dlbmVyYXRlUmFuZG9tQXR0YWNrKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IGhpdENvb3Jkc0FycmF5ID0gW107XG4gIGNvbnN0IF9hZGRUb0hpdENvb3JkcyA9IChpbnB1dCkgPT4ge1xuICAgIGhpdENvb3Jkc0FycmF5LnB1c2goaW5wdXQpO1xuICB9O1xuICBjb25zdCBfY2xlYXJIaXRDb29yZHMgPSAoc2hpcCkgPT4ge1xuICAgIHNoaXAuY29vcmRzLmZvckVhY2goKGNvb3JkKSA9PiB7XG4gICAgICBsZXQgaW5kZXggPSBoaXRDb29yZHNBcnJheS5maW5kSW5kZXgoKHZhbHVlKSA9PiB7XG4gICAgICAgIGlmICh2YWx1ZVswXSA9PSBjb29yZFswXSAmJiB2YWx1ZVsxXSA9PSBjb29yZFsxXSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBoaXRDb29yZHNBcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH0pO1xuICB9O1xuICBjb25zdCBfdXBkYXRlU2hvdEJvYXJkID0gKG9iamVjdCwgcGxheWVyKSA9PiB7XG4gICAgY29uc3QgY29vcmQgPSBvYmplY3QuY29vcmQ7XG4gICAgaWYgKG9iamVjdC5vYmoudmFsdWUgPT0gdHJ1ZSkge1xuICAgICAgaWYgKG9iamVjdC5vYmouc3VuayA9PSB0cnVlKSB7XG4gICAgICAgIGNvbnN0IHNoaXAgPSBwbGF5ZXIuZ2Iud2hpY2hTaGlwKG9iamVjdC5vYmouc2hpcCk7XG4gICAgICAgIF9jbGVhckhpdENvb3JkcyhzaGlwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9hZGRUb0hpdENvb3Jkcyhjb29yZCk7XG4gICAgICB9XG4gICAgICBzaG90LmJvYXJkW2Nvb3JkWzBdXVtjb29yZFsxXV0gPSAxO1xuICAgIH0gZWxzZSB7XG4gICAgICBzaG90LmJvYXJkW2Nvb3JkWzBdXVtjb29yZFsxXV0gPSAtMTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IF9hZGRUb1Byb2JCb2FyZCA9IChnYiwgcHJvYkJvYXJkLCBsZW5ndGgsIGJvb2xlYW4sIHgsIHkpID0+IHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBjb3VudGVyV2VpZ2h0ID0gZ2IuY2hlY2tQcm9iKGxlbmd0aCwgYm9vbGVhbiwgeCwgeSwgaGl0Q29vcmRzQXJyYXkpO1xuICAgICAgaWYgKGJvb2xlYW4pIHtcbiAgICAgICAgcHJvYkJvYXJkW051bWJlcih4KSArIGldW3ldICs9IGNvdW50ZXJXZWlnaHQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9iQm9hcmRbeF1bTnVtYmVyKHkpICsgaV0gKz0gY291bnRlcldlaWdodDtcbiAgICAgIH1cbiAgICB9XG4gICAgX3JlbW92ZUhpdHMoZ2IsIHByb2JCb2FyZCk7XG4gIH07XG4gIC8vIGV2YWx1YXRlIGhvdyB0byBpbXByb3ZlIGNoZWNrUGxhY2UgZm9yIFwiaHVudCBtb2RlXCJcblxuICBjb25zdCBfcmVtb3ZlSGl0cyA9IChnYiwgcHJvYkJvYXJkKSA9PiB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBnYi5ib2FyZC5sZW5ndGg7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBnYi5ib2FyZFtpXS5sZW5ndGg7IGorKykge1xuICAgICAgICBpZiAoZ2IuYm9hcmRbaV1bal0gPiAwKSB7XG4gICAgICAgICAgcHJvYkJvYXJkW2ldW2pdID0gMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgY29uc3QgX3NoaXBQcm9iID0gKGdiLCBzaGlwLCBwcm9iKSA9PiB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBnYi5ib2FyZC5sZW5ndGg7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBnYi5ib2FyZFtpXS5sZW5ndGg7IGorKykge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgIShcbiAgICAgICAgICAgIGdiLmNoZWNrT25Cb2FyZChzaGlwLmxlbmd0aCwgdHJ1ZSwgaSwgaikgfHxcbiAgICAgICAgICAgIGdiLmNoZWNrTWlzcyhzaGlwLmxlbmd0aCwgdHJ1ZSwgaSwgailcbiAgICAgICAgICApXG4gICAgICAgICkge1xuICAgICAgICAgIF9hZGRUb1Byb2JCb2FyZChnYiwgcHJvYi5ib2FyZCwgc2hpcC5sZW5ndGgsIHRydWUsIGksIGopO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ2IuYm9hcmQubGVuZ3RoOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgZ2IuYm9hcmRbaV0ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICEoXG4gICAgICAgICAgICBnYi5jaGVja09uQm9hcmQoc2hpcC5sZW5ndGgsIGZhbHNlLCBpLCBqKSB8fFxuICAgICAgICAgICAgZ2IuY2hlY2tNaXNzKHNoaXAubGVuZ3RoLCBmYWxzZSwgaSwgailcbiAgICAgICAgICApXG4gICAgICAgICkge1xuICAgICAgICAgIF9hZGRUb1Byb2JCb2FyZChnYiwgcHJvYi5ib2FyZCwgc2hpcC5sZW5ndGgsIGZhbHNlLCBpLCBqKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgY29uc3QgX2ZsZWV0UHJvYiA9IChib2FyZCwgZmxlZXQsIHByb2IpID0+IHtcbiAgICBjb25zdCBzaGlwcyA9IE9iamVjdC5rZXlzKGZsZWV0KTtcbiAgICBzaGlwcy5mb3JFYWNoKChzaGlwKSA9PiB7XG4gICAgICBpZiAoIWZsZWV0W3NoaXBdLnN1bmspIF9zaGlwUHJvYihib2FyZCwgZmxlZXRbc2hpcF0sIHByb2IpO1xuICAgIH0pO1xuICB9O1xuICBjb25zdCBfZ2V0UHJvYkNvb3JkcyA9IChib2FyZCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRNYXggPSB7XG4gICAgICBtYXg6IDAsXG4gICAgfTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJvYXJkLmxlbmd0aDsgaSsrKSB7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGJvYXJkW2ldLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIGlmIChib2FyZFtpXVtqXSA+IGN1cnJlbnRNYXgubWF4KSB7XG4gICAgICAgICAgY3VycmVudE1heC5tYXggPSBib2FyZFtpXVtqXTtcbiAgICAgICAgICBjdXJyZW50TWF4LmNvb3JkcyA9IFtpLCBqXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY3VycmVudE1heDtcbiAgfTtcbiAgLy8gYnVpbGQgc21hcnRBSSBhdHRhY2sgbW9kZTpcbiAgY29uc3Qgc21hcnRBdHRhY2sgPSAocGxheWVyKSA9PiB7XG4gICAgY29uc3QgcHJvYiA9IG5ld1Byb2IoKTtcbiAgICAvLyB1cGRhdGVkIHByb2JhYmlsaXR5IGJvYXJkOyBuZWVkcyBhY2Nlc3MgdG8gdXNlcidzIGZsZWV0XG4gICAgX2ZsZWV0UHJvYihzaG90LCBwbGF5ZXIuZmxlZXQsIHByb2IpO1xuICAgIC8vIGdldCBjb29yZGluYXRlcyBvZiBiZXN0IGNlbGxcbiAgICBjb25zdCBjb29yZCA9IF9nZXRQcm9iQ29vcmRzKHByb2IuYm9hcmQpO1xuICAgIC8vIGxhdW5jaCBhdHRhY2sgb24gdGhvc2UgY29vcmRzXG4gICAgY29uc3Qgb2JqID0ge307XG4gICAgb2JqLmNvb3JkID0gY29vcmQuY29vcmRzO1xuICAgIG9iai5vYmogPSBwbGF5ZXIuZ2IucmVjZWl2ZUF0dGFjayhvYmouY29vcmRbMF0sIG9iai5jb29yZFsxXSk7XG4gICAgLy8gY2hlY2sgYXR0YWNrIGludGVsOiBoaXQgb3IgbWlzcywgc3Vuaz9cbiAgICBfdXBkYXRlU2hvdEJvYXJkKG9iaiwgcGxheWVyKTtcbiAgICByZXR1cm4gb2JqO1xuICB9O1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbihcbiAgICB7fSxcbiAgICBhaSxcbiAgICB7IHJhbmRvbUF0dGFjayB9LFxuICAgIHsgc21hcnRBdHRhY2sgfSxcbiAgICB7IHBsYWNlRmxlZXQgfVxuICApO1xufTtcblxuZXhwb3J0IHsgUGxheWVyRmFjdG9yeSwgY29tcHV0ZXIgfTtcbiIsImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQgfSBmcm9tIFwiLi91dGlsaXR5XCI7XG5pbXBvcnQgbG9vcCBmcm9tIFwiLi9nYW1lbG9vcFwiO1xuXG5jb25zdCBhdHRhY2tIb3ZlciA9IChlbGVtZW50KSA9PiB7XG4gIC8vIG9uIGVudGVyLCBoaWdobGlnaHRcbiAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLCAoKSA9PiB7XG4gICAgLy8gY2hlY2sgaWYgY2VsbCBoYXMgYmVlbiBjbGlja2VkIGFscmVhZHlcbiAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QudmFsdWUgPT0gXCJjZWxsXCIpIHtcbiAgICAgIGVsZW1lbnQuc3R5bGUuY3Vyc29yID0gXCJjcm9zc2hhaXJcIjtcbiAgICAgIGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjMzhCMDAwXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsZW1lbnQuc3R5bGUuY3Vyc29yID0gXCJub3QtYWxsb3dlZFwiO1xuICAgICAgZWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiMwMDAwMDBcIjtcbiAgICB9XG4gIH0pO1xuICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCAoKSA9PiB7XG4gICAgY29uc3QgZ3JpZCA9IEFycmF5LmZyb20oZWxlbWVudC5wYXJlbnRFbGVtZW50LmNoaWxkcmVuKTtcbiAgICBncmlkLmZvckVhY2goKGNlbGwpID0+IHtcbiAgICAgIGlmIChjZWxsLmNsYXNzTGlzdC5sZW5ndGggPT0gMSkge1xuICAgICAgICBjZWxsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwid2hpdGVcIjtcbiAgICAgIH0gZWxzZSBpZiAoY2VsbC5jbGFzc0xpc3QudmFsdWUgPT0gXCJjZWxsIGhpdFwiKSB7XG4gICAgICAgIGNlbGwuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMjA4LCAwLCAwKVwiO1xuICAgICAgfSBlbHNlIGlmIChjZWxsLmNsYXNzTGlzdC52YWx1ZSA9PSBcImNlbGwgbWlzc1wiKSB7XG4gICAgICAgIGNlbGwuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMzUsIDEwMCwgMTcwKVwiO1xuICAgICAgfSBlbHNlIGlmIChjZWxsLmNsYXNzTGlzdC52YWx1ZSA9PSBcImNlbGwgc3Vua1wiKSB7XG4gICAgICAgIGNlbGwuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMjA4LCAwLCAwKVwiO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn07XG4vLyByZW5kZXIgZ2FtZWJvYXJkcyBvbiBwYWdlXG5jb25zdCBidWlsZEJvYXJkID0gKG9iamVjdCwgYm9vbGVhbiwgZnVuY3QpID0+IHtcbiAgY29uc3QgYm9hcmQgPSBvYmplY3QuYm9hcmQ7XG4gIGNvbnN0IGRpc3BsYXlCb2FyZCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJkaXNwbGF5Qm9hcmRcIiB9KTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBib2FyZC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGdyaWRDb2wgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IGBjb2xgLCBpZDogYCR7aX1gIH0pO1xuICAgIGRpc3BsYXlCb2FyZC5hcHBlbmRDaGlsZChncmlkQ29sKTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGJvYXJkW2ldLmxlbmd0aDsgaisrKSB7XG4gICAgICBjb25zdCBncmlkQ2VsbCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogYGNlbGxgLCBpZDogYCR7aX0ke2p9YCB9KTtcbiAgICAgIGlmIChib29sZWFuKSB7XG4gICAgICAgIC8vIGFkZCBjbGljayBsaXN0ZW5lciBmb3IgZ2FtZXBsYXlcbiAgICAgICAgLy8gYW5kIGFkZCBhdHRhY2sgaG92ZXIgZmVhdHVyZVxuICAgICAgICBncmlkQ2VsbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICAgICAgICBpZiAobG9vcC5nZXRUdXJuKCkpIHtcbiAgICAgICAgICAgIGZ1bmN0KFtpLCBqXSwgZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgYXR0YWNrSG92ZXIoZ3JpZENlbGwpO1xuICAgICAgfVxuICAgICAgZ3JpZENvbC5hcHBlbmRDaGlsZChncmlkQ2VsbCk7XG4gICAgfVxuICB9XG4gIHJldHVybiBkaXNwbGF5Qm9hcmQ7XG59O1xuY29uc3QgZGlzcGxheVNoaXBzID0gKG9iamVjdCwgYm9hcmRET00pID0+IHtcbiAgY29uc3QgYm9hcmQgPSBvYmplY3QuYm9hcmQ7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYm9hcmQubGVuZ3RoOyBpKyspIHtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGJvYXJkW2ldLmxlbmd0aDsgaisrKSB7XG4gICAgICBpZiAoYm9hcmRbaV1bal0gPiAwKSB7XG4gICAgICAgIGJvYXJkRE9NLmNoaWxkcmVuW2ldLmNoaWxkcmVuW2pdLmNsYXNzTGlzdC5hZGQoXCJzaGlwXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufTtcbmNvbnN0IG1hcmtDZWxsID0gKHgsIHksIHJlc3VsdCwgZ2IsIGJvYXJkRE9NLCBlbW9qaSkgPT4ge1xuICBpZiAocmVzdWx0LnN1bmspIHtcbiAgICBjb25zdCBzaGlwID0gZ2Iud2hpY2hTaGlwKHJlc3VsdC5zaGlwKTtcbiAgICBzaGlwLmNvb3Jkcy5mb3JFYWNoKChjb29yZCkgPT4ge1xuICAgICAgYm9hcmRET00uY2hpbGRyZW5bY29vcmRbMF1dLmNoaWxkcmVuW2Nvb3JkWzFdXS5jbGFzc0xpc3QgPSBcImNlbGwgc3Vua1wiO1xuICAgICAgYm9hcmRET00uY2hpbGRyZW5bY29vcmRbMF1dLmNoaWxkcmVuW2Nvb3JkWzFdXS50ZXh0Q29udGVudCA9IGAke2Vtb2ppfWA7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAocmVzdWx0LnZhbHVlKSB7XG4gICAgYm9hcmRET00uY2hpbGRyZW5beF0uY2hpbGRyZW5beV0uY2xhc3NMaXN0LmFkZChcImhpdFwiKTtcbiAgICBib2FyZERPTS5jaGlsZHJlblt4XS5jaGlsZHJlblt5XS50ZXh0Q29udGVudCA9IFwi8J+UpVwiO1xuICB9IGVsc2Uge1xuICAgIGJvYXJkRE9NLmNoaWxkcmVuW3hdLmNoaWxkcmVuW3ldLmNsYXNzTGlzdC5hZGQoXCJtaXNzXCIpO1xuICAgIGJvYXJkRE9NLmNoaWxkcmVuW3hdLmNoaWxkcmVuW3ldLnRleHRDb250ZW50ID0gXCLwn4yKXCI7XG4gIH1cbn07XG5jb25zdCBkaXNwbGF5TGFiZWwgPSAobWVzc2FnZSkgPT4ge1xuICBjb25zdCBsYWJlbENvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJsYWJlbENvbnRhaW5lclwiIH0pO1xuICBjb25zdCBsYWJlbCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJib2FyZExhYmVsXCIgfSk7XG4gIGxhYmVsLnRleHRDb250ZW50ID0gYCR7bWVzc2FnZX0gd2F0ZXJzYDtcbiAgbGFiZWxDb250YWluZXIuYXBwZW5kQ2hpbGQobGFiZWwpO1xuICByZXR1cm4gbGFiZWxDb250YWluZXI7XG59O1xuY29uc3QgYnVpbGRCb2FyZEFuZExhYmVsID0gKG9iamVjdCwgYm9vbGVhbiwgbWVzc2FnZSwgZnVuY3QpID0+IHtcbiAgY29uc3QgYm9hcmRDb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwiYm9hcmRDb250YWluZXJcIiB9KTtcbiAgYm9hcmRDb250YWluZXIuYXBwZW5kQ2hpbGQoZGlzcGxheUxhYmVsKG1lc3NhZ2UpKTtcbiAgYm9hcmRDb250YWluZXIuYXBwZW5kQ2hpbGQoYnVpbGRCb2FyZChvYmplY3QsIGJvb2xlYW4sIGZ1bmN0KSk7XG4gIHJldHVybiBib2FyZENvbnRhaW5lcjtcbn07XG5cbmV4cG9ydCB7IGJ1aWxkQm9hcmQsIGRpc3BsYXlTaGlwcywgbWFya0NlbGwsIGJ1aWxkQm9hcmRBbmRMYWJlbCB9O1xuIiwiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCB9IGZyb20gXCIuL3V0aWxpdHlcIjtcbmltcG9ydCB7IGJ1aWxkQm9hcmQsIGRpc3BsYXlTaGlwcyB9IGZyb20gXCIuL2JvYXJkRE9NXCI7XG5pbXBvcnQgeyBjb20gfSBmcm9tIFwiLi9jb21zRE9NXCI7XG5pbXBvcnQgbG9vcCBmcm9tIFwiLi9nYW1lbG9vcFwiO1xuXG5jb25zdCBwbGFjZSA9ICgoKSA9PiB7XG4gIGxldCBheGlzID0gdHJ1ZTtcbiAgY29uc3QgY3VycmVudEF4aXMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGF4aXM7XG4gIH07XG4gIGNvbnN0IGNyZWF0ZURpc3BsYXkgPSAob3Bwb25lbnQpID0+IHtcbiAgICBjb25zdCBjb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwicGxhY2VDb250YWluZXJcIiB9KTtcbiAgICBjb25zdCBidXR0b25DID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzOiBcInBsYWNlQnRuQ29udGFpbmVyXCIgfSk7XG4gICAgY29uc3QgYXhpc0J0biA9IGNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgeyBjbGFzczogXCJheGlzQnRuXCIgfSk7XG4gICAgYXhpc0J0bi50ZXh0Q29udGVudCA9IGBSb3RhdGVgO1xuICAgIGNvbnN0IHJhbmRvbUJ0biA9IGNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgeyBjbGFzczogXCJyYW5kb21CdG5cIiB9KTtcbiAgICByYW5kb21CdG4udGV4dENvbnRlbnQgPSBcIlJhbmRvbVwiO1xuICAgIGNvbnN0IGluc3RydWN0ID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzOiBcInBsYWNlSW5zdHJ1Y3Rpb25zXCIgfSk7XG4gICAgY29uc3QgaW5zdHJ1Y3RUaXRsZSA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJpbnN0cnVjdFRpdGxlXCIgfSk7XG4gICAgaW5zdHJ1Y3RUaXRsZS50ZXh0Q29udGVudCA9IFwiSW5zdHJ1Y3Rpb25zOlwiO1xuICAgIGNvbnN0IGluc3RydWN0VGV4dDEgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwiaW5zdHJ1Y3RUZXh0XCIgfSk7XG4gICAgaW5zdHJ1Y3RUZXh0MS50ZXh0Q29udGVudCA9IGBTZWxlY3QgY29vcmRpbmF0ZXMgb24gYm9hcmQgdG8gcGxhY2UgY3VycmVudCBzaGlwLmA7XG4gICAgY29uc3QgaW5zdHJ1Y3RUZXh0MiA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJpbnN0cnVjdFRleHRcIiB9KTtcbiAgICBpbnN0cnVjdFRleHQyLnRleHRDb250ZW50ID0gYFVzZSBidXR0b25zIHRvIHJvdGF0ZSBzaGlwIG9yIHJhbmRvbWx5IGRlcGxveSBlbnRpcmUgZmxlZXQuYDtcbiAgICAvLyBhZGQgbGlzdGVuZXJzXG4gICAgYXhpc0J0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgYXhpcyA9ICFheGlzO1xuICAgICAgLy8gZGVsZXRlIGN1cnJlbnQgYm9hcmRcbiAgICAgIGN1cnJlbnRET00ucmVtb3ZlQ2hpbGQoY3VycmVudERPTS5sYXN0Q2hpbGQpO1xuICAgICAgLy8gYnVpbGQgbmV3IGJvYXJkIHcvIGNvcnJlY3QgbGlzdGVuZXJzXG4gICAgICBwZXJTaGlwKGN1cnJlbnRET00sIGN1cnJlbnRCb2FyZCwgY3VycmVudFNoaXApO1xuICAgIH0pO1xuICAgIHJhbmRvbUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgLy8gcGxhY2UgdXNlciBmbGVldCwgZmluaXNoIHBsYWNlRmxlZXQgJiBpbnN0YW50aWF0ZSBuZXh0IHN0ZXBcbiAgICAgIG9wcG9uZW50LnBsYXllci5wbGFjZUZsZWV0KGN1cnJlbnRPYmopO1xuICAgICAgY3VycmVudERPTS5yZW1vdmVDaGlsZChjdXJyZW50RE9NLmxhc3RDaGlsZCk7XG4gICAgICBmaW5pc2goKTtcbiAgICB9KTtcbiAgICAvLyBhcHBlbmQgaXQgYWxsIHRvZ2V0aGVyXG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGJ1dHRvbkMpO1xuICAgIGJ1dHRvbkMuYXBwZW5kQ2hpbGQoYXhpc0J0bik7XG4gICAgYnV0dG9uQy5hcHBlbmRDaGlsZChyYW5kb21CdG4pO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChpbnN0cnVjdCk7XG4gICAgaW5zdHJ1Y3QuYXBwZW5kQ2hpbGQoaW5zdHJ1Y3RUaXRsZSk7XG4gICAgaW5zdHJ1Y3QuYXBwZW5kQ2hpbGQoaW5zdHJ1Y3RUZXh0MSk7XG4gICAgaW5zdHJ1Y3QuYXBwZW5kQ2hpbGQoaW5zdHJ1Y3RUZXh0Mik7XG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbiAgfTtcbiAgLy8gY2hlY2sgaWYgY29vcmRpbmF0ZXMgeWllbGQgc2hpcCBwbGFjZW1lbnQgb24gdGhlIGJvYXJkXG4gIC8vIG9yIGlmIHRoZXkgY29uZmxpY3Qgd2l0aCBhbHJlYWR5IHBsYWNlZCBzaGlwXG4gIGNvbnN0IGNoZWNrQ2VsbCA9IChnYW1lYm9hcmQsIHNoaXAsIGF4aXMsIHgsIHkpID0+IHtcbiAgICBpZiAoXG4gICAgICBnYW1lYm9hcmQuY2hlY2tPbkJvYXJkKHNoaXAubGVuZ3RoLCBheGlzLCB4LCB5KSB8fFxuICAgICAgZ2FtZWJvYXJkLmNoZWNrUGxhY2Uoc2hpcC5sZW5ndGgsIGF4aXMsIHgsIHkpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9O1xuICBjb25zdCBoaWdobGlnaHRMZW5ndGggPSAoZWxlbWVudCwgbGVuZ3RoKSA9PiB7XG4gICAgY29uc3QgY29vcmQgPSBBcnJheS5mcm9tKGVsZW1lbnQuaWQpO1xuICAgIGxldCBuZXdJZDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoYXhpcykge1xuICAgICAgICBuZXdJZCA9IGAke051bWJlcihjb29yZFswXSkgKyBpfSR7Y29vcmRbMV19YDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5ld0lkID0gYCR7Y29vcmRbMF19JHtOdW1iZXIoY29vcmRbMV0pICsgaX1gO1xuICAgICAgfVxuICAgICAgY29uc3QgY2VsbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG5ld0lkKTtcbiAgICAgIGNlbGwuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJzbGF0ZWdyYXlcIjtcbiAgICB9XG4gIH07XG4gIGNvbnN0IGNsaWNrRm4gPSAoeCwgeSkgPT4ge1xuICAgIGN1cnJlbnRPYmouZ2IucGxhY2VTaGlwKGN1cnJlbnRTaGlwLCBheGlzLCB4LCB5KTtcbiAgICBjb3VudCsrO1xuICAgIGN1cnJlbnRET00ucmVtb3ZlQ2hpbGQoY3VycmVudERPTS5sYXN0Q2hpbGQpO1xuICAgIG5leHRTaGlwKGN1cnJlbnRET00sIGN1cnJlbnRPYmopO1xuICB9O1xuICBjb25zdCBjbGlja0F0dGFjayA9IChlbGVtZW50LCBnYW1lYm9hcmQsIHNoaXAsIHgsIHkpID0+IHtcbiAgICBpZiAoY2hlY2tDZWxsKGdhbWVib2FyZCwgc2hpcCwgY3VycmVudEF4aXMoKSwgeCwgeSkpIHtcbiAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY2xpY2tGbih4LCB5KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgaG92ZXIgPSAoZWxlbWVudCwgZ2FtZWJvYXJkLCBzaGlwLCB4LCB5KSA9PiB7XG4gICAgLy8gb24gZW50ZXIsIGhpZ2hsaWdodCAoZ3JheSBpcyB2YWxpZCwgcmVkIGlzIG5vdC1hbGxvd2VkKVxuICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgKCkgPT4ge1xuICAgICAgLy8gY291bGQgYWRkIGEgY2xhc3MuLi5cbiAgICAgIGlmIChjaGVja0NlbGwoZ2FtZWJvYXJkLCBzaGlwLCBjdXJyZW50QXhpcygpLCB4LCB5KSkge1xuICAgICAgICBlbGVtZW50LnN0eWxlLmN1cnNvciA9IFwicG9pbnRlclwiO1xuICAgICAgICBoaWdobGlnaHRMZW5ndGgoZWxlbWVudCwgc2hpcC5sZW5ndGgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudC5zdHlsZS5jdXJzb3IgPSBcIm5vdC1hbGxvd2VkXCI7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMjA4LCAwLCAwKVwiO1xuICAgICAgfVxuICAgIH0pO1xuICAgIC8vIG9uIGV4aXQsIHJlbW92ZSBob3ZlciBiYWNrZ3JvdW5kIGNvbG9yXG4gICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIiwgKCkgPT4ge1xuICAgICAgY29uc3QgZ3JpZCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImRpdi5jZWxsXCIpKTtcbiAgICAgIGdyaWQuZm9yRWFjaCgoY2VsbCkgPT4ge1xuICAgICAgICBpZiAoY2VsbC5jbGFzc0xpc3QubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICBjZWxsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwid2hpdGVcIjtcbiAgICAgICAgfSBlbHNlIGlmIChjZWxsLmNsYXNzTGlzdC5sZW5ndGggPT0gMikge1xuICAgICAgICAgIGNlbGwuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJzbGF0ZWdyYXlcIjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IGFkZENlbGxMaXN0ZW5lcnMgPSAoZ2FtZWJvYXJkLCBzaGlwKSA9PiB7XG4gICAgY29uc3QgY2VsbEFycmF5ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiZGl2LmNlbGxcIikpO1xuICAgIGNlbGxBcnJheS5mb3JFYWNoKChjZWxsKSA9PiB7XG4gICAgICBjb25zdCB4ID0gTnVtYmVyKGNlbGwuaWQuY2hhckF0KDApKTtcbiAgICAgIGNvbnN0IHkgPSBOdW1iZXIoY2VsbC5pZC5jaGFyQXQoMSkpO1xuICAgICAgaG92ZXIoY2VsbCwgZ2FtZWJvYXJkLCBzaGlwLCB4LCB5KTtcbiAgICAgIGNsaWNrQXR0YWNrKGNlbGwsIGdhbWVib2FyZCwgc2hpcCwgeCwgeSk7XG4gICAgfSk7XG4gIH07XG4gIGxldCBjdXJyZW50T2JqO1xuICBsZXQgY3VycmVudEJvYXJkO1xuICBsZXQgY3VycmVudFNoaXA7XG4gIGxldCBmbGVldEtleXM7XG4gIGxldCBjdXJyZW50RE9NO1xuICBsZXQgY291bnQgPSAwO1xuICBjb25zdCB1cGRhdGVBbGxDdXJyZW50cyA9IChwYXJlbnQsIG9iamVjdCkgPT4ge1xuICAgIGN1cnJlbnRET00gPSBwYXJlbnQ7XG4gICAgY3VycmVudE9iaiA9IG9iamVjdDtcbiAgICBjdXJyZW50Qm9hcmQgPSBvYmplY3QuZ2I7XG4gICAgZmxlZXRLZXlzID0gT2JqZWN0LmtleXMob2JqZWN0LmZsZWV0KTtcbiAgfTtcbiAgY29uc3QgdXBkYXRlQ3VycmVudFNoaXAgPSAoc2hpcCkgPT4ge1xuICAgIGN1cnJlbnRTaGlwID0gc2hpcDtcbiAgfTtcbiAgY29uc3QgbmV4dFNoaXAgPSAocGFyZW50RE9NLCBwbGF5ZXJPYmopID0+IHtcbiAgICBpZiAoY291bnQgPCA1KSB7XG4gICAgICBjb20uaW5zdHJ1Y3QocGxheWVyT2JqLnBsYXllciwgZmxlZXRLZXlzW2NvdW50XSk7XG4gICAgICBwZXJTaGlwKHBhcmVudERPTSwgcGxheWVyT2JqLmdiLCBwbGF5ZXJPYmouZmxlZXRbZmxlZXRLZXlzW2NvdW50XV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhcIk5leHQgc3RlcCBvZiBnYW1lbG9vcCFcIik7XG4gICAgICBmaW5pc2goKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IHBlclNoaXAgPSAocGFyZW50RE9NLCBwbGF5ZXJCb2FyZCwgc2hpcCkgPT4ge1xuICAgIHVwZGF0ZUN1cnJlbnRTaGlwKHNoaXApO1xuICAgIHBhcmVudERPTS5hcHBlbmRDaGlsZChidWlsZEJvYXJkKHBsYXllckJvYXJkLCBmYWxzZSkpO1xuICAgIGRpc3BsYXlTaGlwcyhjdXJyZW50Qm9hcmQsIGN1cnJlbnRET00uY2hpbGRyZW5bMF0pO1xuICAgIGFkZENlbGxMaXN0ZW5lcnMocGxheWVyQm9hcmQsIHNoaXApO1xuICB9O1xuICBjb25zdCBzdGFydCA9IChwYXJlbnRET00sIHBsYXllck9iaiwgb3Bwb25lbnRPYmopID0+IHtcbiAgICBwYXJlbnRET00ucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmNoaWxkcmVuWzFdLmFwcGVuZENoaWxkKFxuICAgICAgY3JlYXRlRGlzcGxheShvcHBvbmVudE9iailcbiAgICApO1xuICAgIHVwZGF0ZUFsbEN1cnJlbnRzKHBhcmVudERPTSwgcGxheWVyT2JqKTtcbiAgICBuZXh0U2hpcChwYXJlbnRET00sIHBsYXllck9iaik7XG4gIH07XG4gIGNvbnN0IGZpbmlzaCA9ICgpID0+IHtcbiAgICBjb20uY2xlYXIoKTtcbiAgICAvLyBpbnZva2UgbmV4dCBzdGVwIGluIGdhbWVsb29wLCBiYXR0bGUgbW9kZVxuICAgIC8vIGhvdyBjYW4gSSBzbW9vdGggdGhpcyB0cmFuc2l0aW9uPyAoZWFzZS1pbik/ICEhIVxuICAgIGxvb3AubGF1bmNoR2FtZShjdXJyZW50RE9NKTtcbiAgICBpZiAod2luZG93Lm1hdGNoTWVkaWEoXCIobWluLXdpZHRoOiA1NTBweClcIikpIHtcbiAgICAgIGN1cnJlbnRET00ucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmNoaWxkcmVuWzBdLmNoaWxkcmVuWzFdLnN0eWxlLmRpc3BsYXkgPVxuICAgICAgICBcImJsb2NrXCI7XG4gICAgfVxuICB9O1xuICByZXR1cm4geyBob3Zlciwgc3RhcnQgfTtcbn0pKCk7XG5leHBvcnQgeyBwbGFjZSB9O1xuIiwiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCB9IGZyb20gXCIuL3V0aWxpdHlcIjtcblxuLy8gYnVpbGQgbGVnZW5kIHRvIGV4cGxhaW4gZW1vamlzLCBwcm92aWRlIGRldGFpbGVkIGluc3RydWN0aW9uc1xuY29uc3Qgc2hpcCA9IHtcbiAgZW1vamk6IFwiIFwiLFxuICB0ZXh0OiBcImZyaWVuZGx5IHNoaXBcIixcbiAgY2xhc3M6IFwic2hpcFwiLFxufTtcbmNvbnN0IHdhdmUgPSB7XG4gIGVtb2ppOiBcIvCfjIpcIixcbiAgdGV4dDogXCJhdHRhY2sgbWlzc1wiLFxuICBjbGFzczogXCJtaXNzXCIsXG59O1xuY29uc3QgaGl0ID0ge1xuICBlbW9qaTogXCLwn5SlXCIsXG4gIHRleHQ6IFwiYXR0YWNrIGhpdFwiLFxuICBjbGFzczogXCJoaXRcIixcbn07XG5jb25zdCBzdW5rID0ge1xuICBlbW9qaTogXCLwn5SxXCIsXG4gIHRleHQ6IFwieW91IHN1bmsgZW5lbXkgc2hpcFwiLFxuICBjbGFzczogXCJzdW5rXCIsXG59O1xuY29uc3QgZW5lbXlTdW5rID0ge1xuICBlbW9qaTogXCLwn4+04oCN4pig77iPXCIsXG4gIHRleHQ6IFwiZW5lbXkgc3VuayBmcmllbmRseSBzaGlwXCIsXG4gIGNsYXNzOiBcInN1bmtcIixcbn07XG5jb25zdCBlbW9qaUFycmF5ID0gW3NoaXAsIHdhdmUsIGhpdCwgc3VuaywgZW5lbXlTdW5rXTtcbmNvbnN0IGNyZWF0ZUxlZ2VuZCA9ICgpID0+IHtcbiAgY29uc3QgY29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzOiBcImxlZ2VuZENvbnRhaW5lclwiIH0pO1xuICBjb25zdCBsZWdlbmRCb3ggPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwibGVnZW5kQm94XCIgfSk7XG4gIGxlZ2VuZEJveC50ZXh0Q29udGVudCA9IFwiTGVnZW5kOlwiO1xuICBjb25zdCBsaXN0ID0gY3JlYXRlRWxlbWVudChcInVsXCIsIHsgY2xhc3M6IFwibGVnZW5kTGlzdFwiIH0pO1xuICBlbW9qaUFycmF5LmZvckVhY2goKGVtb2ppKSA9PiB7XG4gICAgY29uc3QgbGkgPSBjcmVhdGVFbGVtZW50KFwibGlcIiwgeyBjbGFzczogXCJlbW9qaUxpXCIgfSk7XG4gICAgY29uc3QgYm94ID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzOiBgZW1vamlCb3ggJHtlbW9qaS5jbGFzc31gIH0pO1xuICAgIGJveC50ZXh0Q29udGVudCA9IGAke2Vtb2ppLmVtb2ppfWA7XG4gICAgY29uc3QgdGV4dCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJlbW9qaVRleHRcIiB9KTtcbiAgICB0ZXh0LnRleHRDb250ZW50ID0gYC0gJHtlbW9qaS50ZXh0fWA7XG4gICAgbGkuYXBwZW5kQ2hpbGQoYm94KTtcbiAgICBsaS5hcHBlbmRDaGlsZCh0ZXh0KTtcbiAgICBsaXN0LmFwcGVuZENoaWxkKGxpKTtcbiAgfSk7XG4gIGxlZ2VuZEJveC5hcHBlbmRDaGlsZChsaXN0KTtcbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKGxlZ2VuZEJveCk7XG4gIGNvbnN0IGluc3RydWN0Qm94ID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzOiBcImluc3RydWN0Qm94XCIgfSk7XG4gIGluc3RydWN0Qm94LnRleHRDb250ZW50ID0gXCJJbnN0cnVjdGlvbnM6XCI7XG4gIGNvbnN0IGluc3RydWN0VGV4dCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJpbnN0cnVjdFRleHRcIiB9KTtcbiAgaW5zdHJ1Y3RUZXh0LnRleHRDb250ZW50ID1cbiAgICBcIlNlbGVjdCBjb29yZGluYXRlcyBpbiBlbmVteSB3YXRlcnMgdG8gbGF1bmNoIGFuIGF0dGFjay4gVGhlIGJvYXJkIHdpbGwgaW5kaWNhdGUgYSBoaXQgb3IgbWlzcywgb3IgaWYgeW91IHN1bmsgdGhlIGVuZW15IHNoaXAuIEZpbmQgYW5kIGVsaW1pbmF0ZSBhbGwgZml2ZSBlbmVteSBzaGlwcyBiZWZvcmUgdGhleSBlbGltaW5hdGUgeW91cnMhXCI7XG4gIGNvbnN0IG9iamVjdGl2ZUJveCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJvYmplY3RpdmVCb3hcIiB9KTtcbiAgb2JqZWN0aXZlQm94LnRleHRDb250ZW50ID0gXCJPYmplY3RpdmU6XCI7XG4gIGNvbnN0IG9iamVjdGl2ZVRleHQgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwib2JqZWN0aXZlVGV4dFwiIH0pO1xuICBvYmplY3RpdmVUZXh0LnRleHRDb250ZW50ID0gXCJTaW5rIHRoZSBlbmVteSBmbGVldCFcIjtcbiAgb2JqZWN0aXZlQm94LmFwcGVuZENoaWxkKG9iamVjdGl2ZVRleHQpO1xuICBjb250YWluZXIuYXBwZW5kQ2hpbGQob2JqZWN0aXZlQm94KTtcbiAgaW5zdHJ1Y3RCb3guYXBwZW5kQ2hpbGQoaW5zdHJ1Y3RUZXh0KTtcbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKGluc3RydWN0Qm94KTtcbiAgcmV0dXJuIGNvbnRhaW5lcjtcbn07XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVMZWdlbmQ7XG4iLCJpbXBvcnQgQm9hcmRGYWN0b3J5IGZyb20gXCIuL2JvYXJkXCI7XG5pbXBvcnQgeyBQbGF5ZXJGYWN0b3J5LCBjb21wdXRlciB9IGZyb20gXCIuL3BsYXllcnNcIjtcbmltcG9ydCB7IGJ1aWxkRmxlZXQgfSBmcm9tIFwiLi9zaGlwXCI7XG5pbXBvcnQgeyBkaXNwbGF5U2hpcHMsIG1hcmtDZWxsLCBidWlsZEJvYXJkQW5kTGFiZWwgfSBmcm9tIFwiLi9ib2FyZERPTVwiO1xuaW1wb3J0IHsgY29tIH0gZnJvbSBcIi4vY29tc0RPTVwiO1xuaW1wb3J0IHsgcGxhY2UgfSBmcm9tIFwiLi9wbGFjZUZsZWV0RE9NXCI7XG5pbXBvcnQgY3JlYXRlTGVnZW5kIGZyb20gXCIuL2xlZ2VuZERPTVwiO1xuXG4vLyBnYW1lIGxvb3Bcbi8vIGluaXRpYWxpemUgdy8gcDEgYW5kIGdhbWVib2FyZDFcbi8vIHBsYWNlIHNoaXBzXG4vLyBjcmVhdGUgcDIgYW5kIGdhbWVib2FyZDJcbi8vIHBsYWNlIHNoaXBzXG4vLyB0dXJuIGxvZ2ljXG4vLyAtPiB0YWtlIGNvb3JkaW5hdGVzLCBjb25maXJtIGxlZ2FsIHBsYXkgKG5vdCByZXBlYXQpXG4vLyAtPiBsYXVuY2ggYXR0YWNrXG4vLyAgICAgIC0+IGhpdFxuLy8gICAgICAgICAgICAtPiBzdW5rP1xuLy8gICAgICAgICAgICAgICAgLT4geWVzOiAtPiBhbGwgc3Vuaz9cbi8vICAgICAgICAgICAgICAgICAgICAtPiB5ZXM6IGVuZCBnYW1lIChkaXNwbGF5KVxuLy8gICAgICAgICAgICAgICAgICAgIC0+IG5vOiBzd2l0Y2ggdHVybnNcbi8vICAgICAgICAgICAgICAgIC0+IG5vOiBzd2l0Y2ggdHVybnNcbi8vICAgICAgLT4gbWlzc1xuLy8gICAgICAgICAgLT4gc3dpdGNoIHR1cm5zXG4vL1xuLy8gY3JlYXRlIHBsYXllcnMgYW5kIHRoZWlyIHJlc3BlY3RpdmUgZ2FtZWJvYXJkXG5jb25zdCBpbml0aWFsaXplID0gKHBsYXllck5hbWUpID0+IHtcbiAgbGV0IHBsYXllcjtcbiAgaWYgKCFwbGF5ZXJOYW1lKSB7XG4gICAgcGxheWVyID0gY29tcHV0ZXIoKTtcbiAgfSBlbHNlIHtcbiAgICBwbGF5ZXIgPSBQbGF5ZXJGYWN0b3J5KGAke3BsYXllck5hbWV9YCk7XG4gIH1cbiAgY29uc3QgZ2IgPSBCb2FyZEZhY3RvcnkoKTtcbiAgZ2IuY3JlYXRlKDEwKTtcbiAgY29uc3QgZmxlZXQgPSBidWlsZEZsZWV0KCk7XG5cbiAgcmV0dXJuIHsgcGxheWVyLCBnYiwgZmxlZXQgfTtcbn07XG5jb25zdCBsb29wID0gKCgpID0+IHtcbiAgbGV0IHBsYXllclR1cm4gPSB0cnVlO1xuICBsZXQgcGxheWVyT25lO1xuICBsZXQgcGxheWVyVHdvO1xuICBsZXQgcGxheWVyQm9hcmRET007XG4gIGxldCBjb21wQm9hcmRET007XG4gIGNvbnN0IGdldFR1cm4gPSAoKSA9PiB7XG4gICAgcmV0dXJuIHBsYXllclR1cm47XG4gIH07XG4gIGNvbnN0IHN3aXRjaFR1cm5zID0gKCkgPT4gKHBsYXllclR1cm4gPSAhcGxheWVyVHVybik7XG4gIGNvbnN0IGluaXRpYWxUdXJuID0gKGJvYXJkMSwgYm9hcmQyLCBwYXJlbnRET00pID0+IHtcbiAgICBwYXJlbnRET00uYXBwZW5kQ2hpbGQoYnVpbGRCb2FyZEFuZExhYmVsKGJvYXJkMSwgZmFsc2UsIFwiZnJpZW5kbHlcIikpO1xuICAgIGRpc3BsYXlTaGlwcyhib2FyZDEsIHBhcmVudERPTS5maXJzdENoaWxkLmxhc3RDaGlsZCk7XG4gICAgcGxheWVyQm9hcmRET00gPSBwYXJlbnRET00uZmlyc3RDaGlsZC5sYXN0Q2hpbGQ7XG4gICAgcGFyZW50RE9NLmFwcGVuZENoaWxkKGJ1aWxkQm9hcmRBbmRMYWJlbChib2FyZDIsIHRydWUsIFwiZW5lbXlcIiwgbG9vcC50dXJuKSk7XG4gICAgY29tcEJvYXJkRE9NID0gcGFyZW50RE9NLmxhc3RDaGlsZC5sYXN0Q2hpbGQ7XG4gICAgcGFyZW50RE9NLmFwcGVuZENoaWxkKGNyZWF0ZUxlZ2VuZCgpKTtcbiAgICBjb20ubWVzc2FnZShwbGF5ZXJPbmUucGxheWVyLCBgbGF1bmNoIGFuIGF0dGFjayFgKTtcbiAgfTtcbiAgY29uc3QgaW5pdGlhbGl6ZUdhbWUgPSAoY2FsbHNpZ24sIHBhcmVudERPTSkgPT4ge1xuICAgIGNvbnN0IHAxID0gaW5pdGlhbGl6ZShgJHtjYWxsc2lnbn1gKTtcbiAgICBjb25zdCBwMiA9IGluaXRpYWxpemUoZmFsc2UpO1xuICAgIC8vIGRpc3BsYXkgY29tbXNcbiAgICBwYXJlbnRET00ucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmNoaWxkcmVuWzFdLmZpcnN0Q2hpbGQuc3R5bGUuZGlzcGxheSA9XG4gICAgICBcImZsZXhcIjtcbiAgICAvLyBoYXZlIEFJIHBsYWNlIGZsZWV0LCByYW5kb21seVxuICAgIHAyLnBsYXllci5wbGFjZUZsZWV0KHAyKTtcbiAgICAvLyBwcm9tcHQgdXNlciB0byBwbGFjZSBzaGlwc1xuICAgIHBsYWNlLnN0YXJ0KHBhcmVudERPTSwgcDEsIHAyKTtcbiAgICBwbGF5ZXJPbmUgPSBwMTtcbiAgICBwbGF5ZXJUd28gPSBwMjtcbiAgICAvLyBkb24ndCB0aGluayBJIG5lZWQgdGhpcyByZXR1cm4gdmFsdWUuLlxuICAgIHJldHVybiB7IHAxLCBwMiB9O1xuICB9O1xuICBjb25zdCBsYXVuY2hHYW1lID0gKHBhcmVudERPTSkgPT4ge1xuICAgIGluaXRpYWxUdXJuKHBsYXllck9uZS5nYiwgcGxheWVyVHdvLmdiLCBwYXJlbnRET00pO1xuICB9O1xuICBsZXQgY3VycmVudFBsYXllciA9IHt9O1xuICBjb25zdCB0dXJuID0gKGlucHV0KSA9PiB7XG4gICAgY3VycmVudFBsYXllciA9IHBsYXllclR1cm4gPyBwbGF5ZXJPbmUucGxheWVyIDogcGxheWVyVHdvLnBsYXllcjtcbiAgICBsZXQgcmVzdWx0O1xuICAgIGlmIChwbGF5ZXJUdXJuKSB7XG4gICAgICByZXN1bHQgPSBwbGF5ZXJUd28uZ2IucmVjZWl2ZUF0dGFjayhpbnB1dFswXSwgaW5wdXRbMV0pO1xuICAgICAgaWYgKHJlc3VsdC52YWx1ZSA9PT0gMCkge1xuICAgICAgICAvLyBha2EgdXNlciBjbGlja2VkIG9uIGNvb3JkaW5hdGVzIGZvciBhIHNlY29uZCB0aW1lXG4gICAgICAgIC8vIHByb21wdCB1c2VyIGZvciBuZXcgY29vcmRpbmF0ZXNcbiAgICAgICAgY29tLnVwZGF0ZVRleHQoY3VycmVudFBsYXllciwgdHJ1ZSwgXCJcIik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyB1c2VyIGNsaWNrZWQgb24gdmFsaWQgY29vcmRpbmF0ZXNcbiAgICAgICAgLy8gdXBkYXRlIGJvYXJkIGxvZ2ljIChhaSBnYW1lYm9hcmQpXG4gICAgICAgIC8vIGRpc3BsYXkgdGhlIG1vdmUsIGFubm91bmNlIHJlc3VsdCBvbiBjb21tcyAoaGl0L21pc3Mvc3VuaylcbiAgICAgICAgbWFya0NlbGwoaW5wdXRbMF0sIGlucHV0WzFdLCByZXN1bHQsIHBsYXllclR3by5nYiwgY29tcEJvYXJkRE9NLCBcIvCflLFcIik7XG4gICAgICAgIGNvbS51cGRhdGVUZXh0KFxuICAgICAgICAgIGN1cnJlbnRQbGF5ZXIsXG4gICAgICAgICAgZmFsc2UsXG4gICAgICAgICAgcmVzdWx0LnZhbHVlLFxuICAgICAgICAgIHJlc3VsdC5zdW5rLFxuICAgICAgICAgIHJlc3VsdC5zaGlwLFxuICAgICAgICAgIHRydWVcbiAgICAgICAgKTtcbiAgICAgICAgc3dpdGNoVHVybnMoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gYWkgcGxheWVyIG1ha2VzIGF0dGFja1xuICAgICAgLy8gdXBkYXRlIGJvYXJkIGxvZ2ljICh1c2VyIGdhbWVib2FyZClcbiAgICAgIC8vIGRpc3BsYXkgdGhlIG1vdmUsIGFubm91bmNlIHJlc3VsdFxuICAgICAgcmVzdWx0ID0gcGxheWVyVHdvLnBsYXllci5zbWFydEF0dGFjayhwbGF5ZXJPbmUpO1xuICAgICAgbWFya0NlbGwoXG4gICAgICAgIHJlc3VsdC5jb29yZFswXSxcbiAgICAgICAgcmVzdWx0LmNvb3JkWzFdLFxuICAgICAgICByZXN1bHQub2JqLFxuICAgICAgICBwbGF5ZXJPbmUuZ2IsXG4gICAgICAgIHBsYXllckJvYXJkRE9NLFxuICAgICAgICBcIvCfj7TigI3imKDvuI9cIlxuICAgICAgKTtcbiAgICAgIGNvbS51cGRhdGVUZXh0KFxuICAgICAgICBjdXJyZW50UGxheWVyLFxuICAgICAgICBmYWxzZSxcbiAgICAgICAgcmVzdWx0Lm9iai52YWx1ZSxcbiAgICAgICAgcmVzdWx0Lm9iai5zdW5rLFxuICAgICAgICByZXN1bHQub2JqLnNoaXAsXG4gICAgICAgIGZhbHNlXG4gICAgICApO1xuICAgICAgc3dpdGNoVHVybnMoKTtcbiAgICAgIHJlc3VsdCA9IHJlc3VsdC5vYmo7XG4gICAgfVxuICAgIGlmICghcGxheWVyVHVybiAmJiAhcmVzdWx0LmFsbFN1bmspIHtcbiAgICAgIC8vIHRpbWUgZGVsYXkgYmVmb3JlIGFpIHR1cm5cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0dXJuKGZhbHNlKTtcbiAgICAgIH0sIDE1MDApO1xuICAgIH1cbiAgICBpZiAocmVzdWx0LmFsbFN1bmspIHtcbiAgICAgIC8vIHN3aXRjaCB0dXJucyAoYmFjayB0byB3aW5uaW5nIHBsYXllcilcbiAgICAgIHN3aXRjaFR1cm5zKCk7XG4gICAgICAvLyBydW4gZ2FtZW92ZXIgc2VxdWVuY2VcbiAgICAgIGNvbnNvbGUubG9nKFwiZ2FtZSBvdmVyXCIpO1xuICAgICAgY29tLmVuZEdhbWUoY3VycmVudFBsYXllcik7XG4gICAgfVxuICB9O1xuICByZXR1cm4geyBnZXRUdXJuLCBpbml0aWFsVHVybiwgaW5pdGlhbGl6ZUdhbWUsIGxhdW5jaEdhbWUsIHR1cm4gfTtcbn0pKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGxvb3A7XG4iLCJpbXBvcnQgeyBjcmVhdGVFbGVtZW50LCBjbGVhckRpdiB9IGZyb20gXCIuL3V0aWxpdHlcIjtcbmltcG9ydCBJbmZvIGZyb20gXCIuL2ljb25zL2luZm8uc3ZnXCI7XG5pbXBvcnQgR2l0aHViIGZyb20gXCIuL2ljb25zL2dpdGh1Yi5zdmdcIjtcbmltcG9ydCBMaW5rZWRJbiBmcm9tIFwiLi9pY29ucy9saW5rZWRpbi5zdmdcIjtcbmltcG9ydCBsb29wIGZyb20gXCIuL2dhbWVsb29wXCI7XG5pbXBvcnQgeyBjb20gfSBmcm9tIFwiLi9jb21zRE9NXCI7XG5cbi8vIGJ1aWxkIGluaXRpYWwgcGFnZTogaGVhZGVyLCBib2R5LCBmb290ZXJcblxuLy8gcmV2ZWFsIGluZm8gYnRuIChmb3IgbW9iaWxlIHZlcnNpb24pXG5jb25zdCBidG5TaG93ID0gKG1haW5DKSA9PiB7XG4gIG1haW5DLmNoaWxkcmVuWzBdLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgbWFpbkMuY2hpbGRyZW5bMV0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICBtYWluQy5jaGlsZHJlblsyXS5zdHlsZS5kaXNwbGF5ID0gXCJncmlkXCI7XG59O1xuY29uc3QgYnRuSGlkZSA9IChtYWluQykgPT4ge1xuICBtYWluQy5jaGlsZHJlblswXS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICBtYWluQy5jaGlsZHJlblsxXS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICBtYWluQy5jaGlsZHJlblsyXS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG59O1xubGV0IGhlYWRlckJ0biA9IGZhbHNlO1xuY29uc3QgaGVhZGVyQnRuRm4gPSAobWFpbkMpID0+IHtcbiAgaGVhZGVyQnRuID0gIWhlYWRlckJ0bjtcbiAgaWYgKGhlYWRlckJ0bikge1xuICAgIGJ0blNob3cobWFpbkMpO1xuICB9IGVsc2Uge1xuICAgIGJ0bkhpZGUobWFpbkMpO1xuICB9XG59O1xuY29uc3QgaGVhZGVyID0gKCkgPT4ge1xuICBjb25zdCBoZWFkQyA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJoZWFkZXJDb250YWluZXJcIiB9KTtcbiAgY29uc3QgdGl0bGUgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwiaGVhZGVyVGl0bGVcIiB9KTtcbiAgdGl0bGUudGV4dENvbnRlbnQgPSBcIkJBVFRMRVNISVBcIjtcbiAgY29uc3QgbWVudUJ0bkNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJtZW51QnRuQ29udGFpbmVyXCIgfSk7XG4gIGNvbnN0IG1lbnVCdG4gPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwibWVudUJ0blwiIH0pO1xuICBjb25zdCBtZW51SWNvbiA9IGNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwgeyBjbGFzczogXCJtZW51SWNvblwiIH0pO1xuICBtZW51SWNvbi5zcmMgPSBJbmZvO1xuICBtZW51SWNvbi5hbHQgPSBcIkluZm9cIjtcbiAgbWVudUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGhlYWRlckJ0bkZuKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJkaXYubWFpbkNvbnRhaW5lclwiKSk7XG4gIH0pO1xuICBoZWFkQy5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gIGhlYWRDLmFwcGVuZENoaWxkKG1lbnVCdG5Db250YWluZXIpO1xuICBtZW51QnRuQ29udGFpbmVyLmFwcGVuZENoaWxkKG1lbnVCdG4pO1xuICBtZW51QnRuLmFwcGVuZENoaWxkKG1lbnVJY29uKTtcbiAgcmV0dXJuIGhlYWRDO1xufTtcbmNvbnN0IGZvb3RlciA9ICgpID0+IHtcbiAgY29uc3QgZm9vdEMgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwiZm9vdGVyQ29udGFpbmVyXCIgfSk7XG4gIGNvbnN0IGZvb3RlckJveCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJmb290ZXJCb3hcIiB9KTtcbiAgY29uc3QgbGlua0NvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJsaW5rQ29udGFpbmVyXCIgfSk7XG4gIGNvbnN0IGdpdExpbmsgPSBjcmVhdGVFbGVtZW50KFwiYVwiLCB7XG4gICAgaHJlZjogXCJodHRwczovL2dpdGh1Yi5jb20vY29ubm9yd2FybWVcIixcbiAgICBhbHQ6IFwiR2l0aHViIFByb2ZpbGVcIixcbiAgICB0YXJnZXQ6IFwiX2JsYW5rXCIsXG4gIH0pO1xuICBjb25zdCBnaXRJY29uID0gY3JlYXRlRWxlbWVudChcImltZ1wiLCB7IGNsYXNzOiBcImdpdEljb25cIiB9KTtcbiAgZ2l0SWNvbi5zcmMgPSBHaXRodWI7XG4gIGdpdEljb24uYWx0ID0gXCJHaXRodWIgUHJvZmlsZVwiO1xuICBjb25zdCBsaW5rTGluayA9IGNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtcbiAgICBocmVmOiBcImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9jb25ub3Itd2FybWUtMTAzYTA5MTY3XCIsXG4gICAgYWx0OiBcIkxpbmtlZEluIFByb2ZpbGVcIixcbiAgICB0YXJnZXQ6IFwiX2JsYW5rXCIsXG4gIH0pO1xuICBjb25zdCBsaW5rSWNvbiA9IGNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwgeyBjbGFzczogXCJsaW5rSWNvblwiIH0pO1xuICBsaW5rSWNvbi5zcmMgPSBMaW5rZWRJbjtcbiAgbGlua0ljb24uYWx0ID0gXCJMaW5rZWRJbiBQcm9maWxlXCI7XG4gIGNvbnN0IHRleHRDb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwidGV4dENvbnRhaW5lclwiIH0pO1xuICB0ZXh0Q29udGFpbmVyLnRleHRDb250ZW50ID0gXCJQZXJlZ3Jpbm5pbmcgUHJvZHVjdGlvbnNcIjtcbiAgLy8gYXBwZW5kIGl0IGFsbCB0b2dldGhlclxuICBmb290Qy5hcHBlbmRDaGlsZChmb290ZXJCb3gpO1xuICBmb290ZXJCb3guYXBwZW5kQ2hpbGQobGlua0NvbnRhaW5lcik7XG4gIGxpbmtDb250YWluZXIuYXBwZW5kQ2hpbGQoZ2l0TGluayk7XG4gIGdpdExpbmsuYXBwZW5kQ2hpbGQoZ2l0SWNvbik7XG4gIGxpbmtDb250YWluZXIuYXBwZW5kQ2hpbGQobGlua0xpbmspO1xuICBsaW5rTGluay5hcHBlbmRDaGlsZChsaW5rSWNvbik7XG4gIGZvb3RlckJveC5hcHBlbmRDaGlsZCh0ZXh0Q29udGFpbmVyKTtcbiAgcmV0dXJuIGZvb3RDO1xufTtcbi8vXG5jb25zdCBtYWluQ29udGVudCA9ICgpID0+IHtcbiAgY29uc3QgbWFpbiA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJtYWluXCIgfSk7XG4gIGNvbnN0IG1haW5DID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzOiBcIm1haW5Db250YWluZXJcIiB9KTtcbiAgY29uc3QgaW5pdGlhbEMgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwiaW5pdGlhbENvbnRlbnRcIiB9KTtcbiAgY29uc3QgaW5mb0MgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3M6IFwiaW5zdHJ1Y3Rpb25zQ29udGFpbmVyXCIgfSk7XG4gIGNvbnN0IGluc3RydWN0ID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzOiBcImluc3RydWN0aW9uc1wiIH0pO1xuICBpbnN0cnVjdC50ZXh0Q29udGVudCA9IFwiRWxpbWluYXRlIHRoZSBlbmVteSBmbGVldCFcIjtcbiAgY29uc3QgaW5wdXRDID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzOiBcImlucHV0Q29udGFpbmVyXCIgfSk7XG4gIGNvbnN0IGlucHV0ID0gY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICB0eXBlOiBcInRleHRcIixcbiAgICBpZDogXCJ1c2VybmFtZVwiLFxuICAgIGNsYXNzOiBcImlucHV0RmllbGRcIixcbiAgICBwbGFjZWhvbGRlcjogXCJBcXVhbWFuIPCflLFcIixcbiAgfSk7XG4gIGNvbnN0IGlucHV0TGFiZWwgPSBjcmVhdGVFbGVtZW50KFwibGFiZWxcIiwgeyBmb3I6IFwidXNlcm5hbWVcIiB9KTtcbiAgaW5wdXRMYWJlbC50ZXh0Q29udGVudCA9IFwiRW50ZXIgUGxheWVyIE5hbWU6XCI7XG4gIGNvbnN0IHN0YXJ0QyA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJzdGFydENvbnRhaW5lclwiIH0pO1xuICBjb25zdCBzdGFydCA9IGNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgeyBjbGFzczogXCJzdGFydFwiIH0pO1xuICBzdGFydC50ZXh0Q29udGVudCA9IFwiU3RhcnQgR2FtZSFcIjtcblxuICAvLyBsaXN0ZW5lciBhbmQgaGVscGVyc1xuICBjb25zdCBjbGVhck1haW4gPSAoKSA9PiBjbGVhckRpdihtYWluQyk7XG4gIGNvbnN0IHN0YXJ0Rm4gPSAoKSA9PiB7XG4gICAgLy8gY2hlY2sgaWYgaW5wdXQgaXMgZW1wdHlcbiAgICBsZXQgY2FsbHNpZ24gPSBcIkFxdWFtYW4g8J+UsVwiO1xuICAgIGlmIChpbnB1dC52YWx1ZSkge1xuICAgICAgY2FsbHNpZ24gPSBpbnB1dC52YWx1ZTtcbiAgICB9XG4gICAgLy8gY2xlYXIgbWFpbiBjb250YWluZXIgLT4gcHJlcCBmb3IgYm9hcmQgZGlzcGxheVxuICAgIGNsZWFyTWFpbigpO1xuICAgIC8vIGluaXRpYWxpemUgZ2FtZSBsb29wXG4gICAgbG9vcC5pbml0aWFsaXplR2FtZShjYWxsc2lnbiwgbWFpbkMpO1xuICB9O1xuICBzdGFydC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIHN0YXJ0Rm4oKTtcbiAgfSk7XG4gIC8vIGFwcGVuZCBpdCBhbGwgdG9nZXRoZXJcbiAgbWFpbi5hcHBlbmRDaGlsZChtYWluQyk7XG4gIG1haW5DLmFwcGVuZENoaWxkKGluaXRpYWxDKTtcbiAgaW5pdGlhbEMuYXBwZW5kQ2hpbGQoaW5mb0MpO1xuICBpbmZvQy5hcHBlbmRDaGlsZChpbnN0cnVjdCk7XG4gIGluaXRpYWxDLmFwcGVuZENoaWxkKGlucHV0Qyk7XG4gIGlucHV0Qy5hcHBlbmRDaGlsZChpbnB1dExhYmVsKTtcbiAgaW5wdXRDLmFwcGVuZENoaWxkKGlucHV0KTtcbiAgaW5pdGlhbEMuYXBwZW5kQ2hpbGQoc3RhcnRDKTtcbiAgc3RhcnRDLmFwcGVuZENoaWxkKHN0YXJ0KTtcbiAgcmV0dXJuIG1haW47XG59O1xuY29uc3QgbWFrZUluaXRpYWwgPSAoKSA9PiB7XG4gIGNvbnN0IHBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keVwiKTtcbiAgY29uc3QgYm9keSA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzczogXCJib2R5XCIgfSk7XG4gIGJvZHkuYXBwZW5kQ2hpbGQoaGVhZGVyKCkpO1xuICBib2R5LmFwcGVuZENoaWxkKGNvbS5idWlsZENvbW1zKCkpO1xuICBib2R5LmFwcGVuZENoaWxkKG1haW5Db250ZW50KCkpO1xuICBib2R5LmFwcGVuZENoaWxkKGZvb3RlcigpKTtcbiAgcGFnZS5hcHBlbmRDaGlsZChib2R5KTtcbn07XG5jb25zdCBtYWtlSW5pdGlhbExpdGUgPSAoKSA9PiB7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZGl2LmJvZHlcIik7XG4gIGJvZHkuaW5zZXJ0QmVmb3JlKGNvbS5idWlsZENvbW1zKCksIGJvZHkuY2hpbGRyZW5bMV0pO1xuICBib2R5Lmluc2VydEJlZm9yZShtYWluQ29udGVudCgpLCBib2R5LmNoaWxkcmVuWzJdKTtcbn07XG5leHBvcnQgeyBtYWtlSW5pdGlhbCwgbWFrZUluaXRpYWxMaXRlIH07XG4iLCIvLyBzaGlwIGxvZ2ljXG5jb25zdCBTaGlwRmFjdG9yeSA9IChpbnB1dCwgbWFyaykgPT4ge1xuICBjb25zdCBsZW5ndGggPSBpbnB1dDtcbiAgbGV0IGhpdHMgPSAwO1xuICBsZXQgc3VuayA9IGZhbHNlO1xuICBsZXQgbWFya2VyID0gbGVuZ3RoO1xuICBpZiAobWFyaykge1xuICAgIG1hcmtlciA9IG1hcms7XG4gIH1cbiAgY29uc3QgY29vcmRzID0gW107XG4gIGNvbnN0IGdldEhpdHMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGhpdHM7XG4gIH07XG4gIGNvbnN0IGhpdCA9ICgpID0+IHtcbiAgICBoaXRzICs9IDE7XG4gIH07XG4gIGNvbnN0IGlzU3VuayA9ICgpID0+IHtcbiAgICByZXR1cm4gbGVuZ3RoIDw9IGhpdHMgPyAoc3VuayA9IHRydWUpIDogKHN1bmsgPSBmYWxzZSk7XG4gIH07XG4gIGNvbnN0IGhpdFBsdXMgPSAoKSA9PiB7XG4gICAgaGl0KCk7XG4gICAgcmV0dXJuIGlzU3VuaygpO1xuICB9O1xuICByZXR1cm4geyBsZW5ndGgsIHN1bmssIG1hcmtlciwgY29vcmRzLCBnZXRIaXRzLCBoaXQsIGlzU3VuaywgaGl0UGx1cyB9O1xufTtcbmNvbnN0IGJ1aWxkRmxlZXQgPSAoKSA9PiB7XG4gIGNvbnN0IHN1Ym1hcmluZSA9IFNoaXBGYWN0b3J5KDMsIDEpO1xuICBjb25zdCBwYXRyb2wgPSBTaGlwRmFjdG9yeSgyKTtcbiAgY29uc3QgZGVzdHJveWVyID0gU2hpcEZhY3RvcnkoMyk7XG4gIGNvbnN0IGJhdHRsZXNoaXAgPSBTaGlwRmFjdG9yeSg0KTtcbiAgY29uc3QgY2FycmllciA9IFNoaXBGYWN0b3J5KDUpO1xuICByZXR1cm4geyBzdWJtYXJpbmUsIHBhdHJvbCwgZGVzdHJveWVyLCBiYXR0bGVzaGlwLCBjYXJyaWVyIH07XG59O1xuZXhwb3J0IHsgU2hpcEZhY3RvcnksIGJ1aWxkRmxlZXQgfTtcbiIsIi8vIERPTSBoZWxwZXIgZnVuY3Rpb25zXG4vLyAtPiBjcmVhdGUgRE9NIGVsZW1lbnQgYW5kIGFkZCBhdHRyaWJ1dGVzXG4vLyBpcyB0aGVyZSBhIG1vcmUgZWZmZWN0aXZlL2VmZmljaWVudCB3YXkgdG8gZG8gdGhpcz8hXG5jb25zdCBjcmVhdGVFbGVtZW50ID0gKHR5cGUsIGF0dHJpYnV0ZXMpID0+IHtcbiAgY29uc3QgbmV3RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYCR7dHlwZX1gKTtcbiAgaWYgKGF0dHJpYnV0ZXMgPT0gbnVsbCkgcmV0dXJuIG5ld0VsZW1lbnQ7XG4gIHNldEF0dHJpYnV0ZXMobmV3RWxlbWVudCwgYXR0cmlidXRlcyk7XG4gIHJldHVybiBuZXdFbGVtZW50O1xufTtcbmNvbnN0IHNldEF0dHJpYnV0ZXMgPSAoZWxlbWVudCwgYXR0cmlidXRlcykgPT4ge1xuICBPYmplY3QuZW50cmllcyhhdHRyaWJ1dGVzKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTtcbiAgfSk7XG59O1xuY29uc3QgY2xlYXJEaXYgPSAoZGl2KSA9PiB7XG4gIHdoaWxlIChkaXYuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgIGRpdi5yZW1vdmVDaGlsZChkaXYuZmlyc3RDaGlsZCk7XG4gIH1cbn07XG5leHBvcnQgeyBjcmVhdGVFbGVtZW50LCBjbGVhckRpdiB9O1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0ODI2OiAwLFxuXHQ1Mzk6IDAsXG5cdDE5ODogMCxcblx0OTg6IDAsXG5cdDQwMzogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiaW1wb3J0IHsgbWFrZUluaXRpYWwgfSBmcm9tICcuL2luaXRpYWxET00nO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5cbm1ha2VJbml0aWFsKCk7Il0sIm5hbWVzIjpbIm9wdGlvbnMiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJib2FyZCIsInNoaXBBcnJheSIsImNoZWNrUGxhY2UiLCJheGlzIiwieCIsInkiLCJ2YWx1ZSIsImFycmF5IiwiZmluZCIsImNoZWNrT25Cb2FyZCIsIndoaWNoU2hpcCIsImlucHV0IiwibWFya2VyIiwiYWxsU3VuayIsImV2ZXJ5IiwiaXNTdW5rIiwibWlzc2VkQXR0YWNrcyIsIl91cGRhdGVCb2FyZCIsIl9sYXVuY2hBdHRhY2siLCJzdW5rIiwiaGl0UGx1cyIsIl91cGRhdGVIaXQiLCJzaGlwIiwiX2FkZE1pc3MiLCJfdXBkYXRlTWlzcyIsImNyZWF0ZSIsInJvdyIsImoiLCJwbGFjZVNoaXAiLCJvYmplY3QiLCJjb29yZHMiLCJjaGVja01pc3MiLCJjaGVja1Byb2IiLCJoaXRDb29yZEFycmF5Iiwid2VpZ2h0Iiwic2hpcENvb3JkcyIsIk51bWJlciIsImZvckVhY2giLCJjb29yZCIsInJlY2VpdmVBdHRhY2siLCJfY2hlY2tBdHRhY2siLCJjb20iLCJjb21tQyIsImNsYXNzIiwicHJvbm91bkFycmF5IiwiYnVpbGRDb21tcyIsImNvbW1zIiwidGV4dENvbnRlbnQiLCJkaXNwbGF5IiwiY2xlYXIiLCJsYXN0Q2hpbGQiLCJpbnN0cnVjdCIsInBsYXllciIsImNvZGVuYW1lIiwibWVzc2FnZSIsInVwZGF0ZVRleHQiLCJwbGF5ZXJOYW1lIiwiYm9vbGVhbiIsImhpdCIsInN0cmlrZSIsImVuZEdhbWUiLCJtYWluQyIsIm5leHRFbGVtZW50U2libGluZyIsImVuZEMiLCJiYW5uZXIiLCJ3aW5uZXIiLCJwbGF5QWdhaW4iLCJhZGRFdmVudExpc3RlbmVyIiwicGFyZW50RWxlbWVudCIsImNoaWxkcmVuIiwiUGxheWVyRmFjdG9yeSIsIndpbnMiLCJhdHRhY2siLCJjb29yZGluYXRlcyIsImdhbWVib2FyZCIsImFkZFdpbiIsImNvbXB1dGVyIiwiYWkiLCJzaG90IiwiX2dlbmVyYXRlIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiX2dlbmVyYXRlUmFuZG9tQXR0YWNrIiwiYXR0YWNrc0FycmF5IiwiX2F2YWlsYWJsZSIsIl9yYW5kb21BeGlzIiwiaGl0Q29vcmRzQXJyYXkiLCJfYWRkVG9Qcm9iQm9hcmQiLCJnYiIsInByb2JCb2FyZCIsImNvdW50ZXJXZWlnaHQiLCJfcmVtb3ZlSGl0cyIsIk9iamVjdCIsImFzc2lnbiIsInJhbmRvbUF0dGFjayIsIl9nZW5lcmF0ZUNvb3JkIiwic21hcnRBdHRhY2siLCJwcm9iIiwibmV3UHJvYiIsImZsZWV0Iiwia2V5cyIsIl9zaGlwUHJvYiIsIl9mbGVldFByb2IiLCJjdXJyZW50TWF4IiwibWF4IiwiX2dldFByb2JDb29yZHMiLCJmaW5kSW5kZXgiLCJfY2xlYXJIaXRDb29yZHMiLCJfdXBkYXRlU2hvdEJvYXJkIiwicGxhY2VGbGVldCIsImF0dGFja0hvdmVyIiwiY2xhc3NMaXN0IiwiY3Vyc29yIiwiYmFja2dyb3VuZENvbG9yIiwiQXJyYXkiLCJmcm9tIiwiY2VsbCIsImJ1aWxkQm9hcmQiLCJmdW5jdCIsImRpc3BsYXlCb2FyZCIsImdyaWRDb2wiLCJncmlkQ2VsbCIsImRpc3BsYXlTaGlwcyIsImJvYXJkRE9NIiwiYWRkIiwibWFya0NlbGwiLCJlbW9qaSIsImJ1aWxkQm9hcmRBbmRMYWJlbCIsImJvYXJkQ29udGFpbmVyIiwibGFiZWxDb250YWluZXIiLCJsYWJlbCIsImRpc3BsYXlMYWJlbCIsInBsYWNlIiwiY3VycmVudEF4aXMiLCJjaGVja0NlbGwiLCJob3ZlciIsIm5ld0lkIiwiZ2V0RWxlbWVudEJ5SWQiLCJoaWdobGlnaHRMZW5ndGgiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY3VycmVudE9iaiIsImN1cnJlbnRCb2FyZCIsImN1cnJlbnRTaGlwIiwiZmxlZXRLZXlzIiwiY3VycmVudERPTSIsIm5leHRTaGlwIiwicGFyZW50RE9NIiwicGxheWVyT2JqIiwicGVyU2hpcCIsImNvbnNvbGUiLCJsb2ciLCJmaW5pc2giLCJwbGF5ZXJCb2FyZCIsInVwZGF0ZUN1cnJlbnRTaGlwIiwiY2hhckF0IiwiY2xpY2tGbiIsImNsaWNrQXR0YWNrIiwiYWRkQ2VsbExpc3RlbmVycyIsIm1hdGNoTWVkaWEiLCJzdGFydCIsIm9wcG9uZW50T2JqIiwib3Bwb25lbnQiLCJjb250YWluZXIiLCJidXR0b25DIiwiYXhpc0J0biIsInJhbmRvbUJ0biIsImluc3RydWN0VGl0bGUiLCJpbnN0cnVjdFRleHQxIiwiaW5zdHJ1Y3RUZXh0MiIsImNyZWF0ZURpc3BsYXkiLCJlbW9qaUFycmF5IiwidGV4dCIsImluaXRpYWxpemUiLCJsb29wIiwicGxheWVyT25lIiwicGxheWVyVHdvIiwicGxheWVyQm9hcmRET00iLCJjb21wQm9hcmRET00iLCJwbGF5ZXJUdXJuIiwic3dpdGNoVHVybnMiLCJpbml0aWFsVHVybiIsImJvYXJkMSIsImJvYXJkMiIsInR1cm4iLCJsZWdlbmRCb3giLCJsaSIsImJveCIsImluc3RydWN0Qm94IiwiaW5zdHJ1Y3RUZXh0Iiwib2JqZWN0aXZlQm94Iiwib2JqZWN0aXZlVGV4dCIsImN1cnJlbnRQbGF5ZXIiLCJzZXRUaW1lb3V0IiwiZ2V0VHVybiIsImluaXRpYWxpemVHYW1lIiwiY2FsbHNpZ24iLCJwMSIsInAyIiwibGF1bmNoR2FtZSIsImhlYWRlckJ0biIsIm1haW5Db250ZW50IiwibWFpbiIsImluaXRpYWxDIiwiaW5mb0MiLCJpbnB1dEMiLCJ0eXBlIiwicGxhY2Vob2xkZXIiLCJpbnB1dExhYmVsIiwiZm9yIiwic3RhcnRDIiwic3RhcnRGbiIsIm1ha2VJbml0aWFsIiwicGFnZSIsImJvZHkiLCJoZWFkQyIsInRpdGxlIiwibWVudUJ0bkNvbnRhaW5lciIsIm1lbnVCdG4iLCJtZW51SWNvbiIsInNyYyIsImFsdCIsImJ0blNob3ciLCJidG5IaWRlIiwiaGVhZGVyIiwiZm9vdEMiLCJmb290ZXJCb3giLCJsaW5rQ29udGFpbmVyIiwiZ2l0TGluayIsImhyZWYiLCJnaXRJY29uIiwibGlua0xpbmsiLCJsaW5rSWNvbiIsInRleHRDb250YWluZXIiLCJmb290ZXIiLCJtYWtlSW5pdGlhbExpdGUiLCJpbnNlcnRCZWZvcmUiLCJTaGlwRmFjdG9yeSIsIm1hcmsiLCJoaXRzIiwiZ2V0SGl0cyIsImJ1aWxkRmxlZXQiLCJzdWJtYXJpbmUiLCJwYXRyb2wiLCJkZXN0cm95ZXIiLCJiYXR0bGVzaGlwIiwiY2FycmllciIsIm5ld0VsZW1lbnQiLCJlbnRyaWVzIiwia2V5IiwiY2xlYXJEaXYiLCJkaXYiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsIm5jIl0sInNvdXJjZVJvb3QiOiIifQ==